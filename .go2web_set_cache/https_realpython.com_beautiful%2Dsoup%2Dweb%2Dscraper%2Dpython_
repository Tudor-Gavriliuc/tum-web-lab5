{"response": "7b1d\r\n\n\n<!doctype html>\n<html lang=\"en\">\n  <head>\n    \n    \n    <link href=\"https://files.realpython.com\" rel=\"preconnect\">\n\n    <title>Beautiful Soup: Build a Web Scraper With Python \u2013 Real Python</title>\n    <meta name=\"author\" content=\"Real Python\">\n    <meta name=\"description\" content=\"In this tutorial, you&#x27;ll walk through the main steps of the web scraping process. You&#x27;ll learn how to write a script that uses Python&#x27;s Requests library to scrape data from a website. You&#x27;ll also use Beautiful Soup to extract the specific pieces of information you&#x27;re interested in.\">\n    <meta name=\"keywords\" content=\"\">\n\n    \n  \n\n\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no, viewport-fit=cover\">\n\n    \n      <link rel=\"stylesheet\" href=\"/static/realpython.min.b772993a9f6a.css\">\n      <link rel=\"stylesheet\" href=\"/static/gfonts/font.5ac42994de49.css\">\n      <link rel=\"preload\" href=\"/static/glightbox.min.9b438b29cef1.css\" as=\"style\" onload=\"this.onload=null;this.rel='stylesheet'\"><noscript><link rel=\"stylesheet\" href=\"/static/glightbox.min.9b438b29cef1.css\"></noscript>\n      \n    \n\n    \n  \n  <link rel=\"preload\" as=\"image\" href=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\" imagesrcset=\"/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 1920w\" imagesizes=\"(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)\">\n\n\n    \n    \n      <link rel=\"canonical\" href=\"https://realpython.com/beautiful-soup-web-scraper-python/\">\n\n      \n      \n        <meta name=\"twitter:card\" content=\"summary_large_image\">\n        <meta name=\"twitter:image\" content=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\">\n        <meta property=\"og:image\" content=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\">\n        <meta name=\"robots\" content=\"max-image-preview:large\">\n      \n      <meta name=\"twitter:creator\" content=\"@realpython\">\n      <meta name=\"twitter:site\" content=\"@realpython\">\n      <meta property=\"og:title\" content=\"Beautiful Soup: Build a Web Scraper With Python \u2013 Real Python\">\n      <meta property=\"og:type\" content=\"article\">\n      <meta property=\"og:url\" content=\"https://realpython.com/beautiful-soup-web-scraper-python/\">\n      <meta property=\"og:description\" content=\"In this tutorial, you&#x27;ll walk through the main steps of the web scraping process. You&#x27;ll learn how to write a script that uses Python&#x27;s Requests library to scrape data from a website. You&#x27;ll also use Beautiful Soup to extract the specific pieces of information you&#x27;re interested in.\">\n    \n\n    <link href=\"/static/favicon.68cbf4197b0c.png\" rel=\"icon\">\n    <link href=\"https://realpython.com/atom.xml\" rel=\"alternate\" title=\"Real Python\" type=\"application/atom+xml\">\n    <link rel=\"manifest\" href=\"/manifest.json\">\n\n    \n\n    \n    \n\n    \n    <script id=\"icons-data\" type=\"application/json\">{\"iconsUrl\": \"/static/icons.6eec2e95bede.svg\"}</script>\n    <script id=\"optins-data\" type=\"application/json\">{\"turnstileSiteKey\": \"0x4AAAAAAAQQUCLRXBi8NnUh\"}</script>\n\n    \n    \n<script async src=\"https://www.googletagmanager.com/gtag/js?id=G-L7L6L5F6Y6\"></script>\n<script>\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', 'G-L7L6L5F6Y6');\n\n  \n\n  gtag('get', 'G-L7L6L5F6Y6', 'client_id', (clid) => {\n    document.cookie = 'gaclid=' + clid + ';max-age=86400000;path=/;secure';\n  });\n  \n</script>\n\n  </head>\n  <body >\n    \n      \n\n<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark flex-column  user-select-none\">\n  <div class=\"container flex-row\">\n\n    <a class=\"navbar-brand\" href=\"/\">\n      <img src=\"/static/real-python-logo.893c30edea53.svg\" width=\"165\" height=\"40\" class=\"d-inline-block align-top\" alt=\"Real Python\">\n    </a>\n\n    \n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n\n    <div class=\"collapse navbar-collapse navbar-nav-scroll\" id=\"navbarSupportedContent\" role=\"navigation\" aria-label=\"Main Navigation\">\n\n      <ul class=\"navbar-nav mr-2\">\n\n        <li class=\"nav-item\">\n          <a class=\"nav-link rounded\" href=\"/start-here/\">Start&nbsp;Here</a>\n        </li>\n\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link rounded dropdown-toggle\" href=\"#\" id=\"navbarDropdownLibrary\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            <span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#brands--python\"/></svg></span> Learn Python\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownLibrary\">\n            \n<a class=\"dropdown-item \" href=\"/search?kind=article&kind=course&order=newest\" style=\"color: #ff7e73; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--graduation-cap\"/></svg></span>Python Tutorials&nbsp;\u2192<br><small class=\"text-secondary\">In-depth articles and video courses</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/learning-paths/\" style=\"color: #ffc873; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@learning-path\"/></svg></span>Learning Paths&nbsp;\u2192<br><small class=\"text-secondary\">Guided study plans for accelerated learning</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/quizzes/\" style=\"color: #abe0e5; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@quiz\"/></svg></span>Quizzes&nbsp;\u2192<br><small class=\"text-secondary\">Check your learning progress</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/tutorials/all/\" style=\"color: #ccc; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@category\"/></svg></span>Browse Topics&nbsp;\u2192<br><small class=\"text-secondary\">Focus on a specific area or skill level</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/community/\" style=\"color: #e5c6ab; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--message-smile\"/></svg></span>Community Chat&nbsp;\u2192<br><small class=\"text-secondary\">Learn with other Pythonistas</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/office-hours/\" style=\"color: #e5c6ab; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--users\"/></svg></span>Office Hours&nbsp;\u2192<br><small class=\"text-secondary\">Live Q&A calls with Python experts</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/podcasts/rpp/\" style=\"color: #b8abe5; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@podcast\"/></svg></span>Podcast&nbsp;\u2192<br><small class=\"text-secondary\">Hear what\u2019s new in the world of Python</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/products/books/\" style=\"color: #abe5b1; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--book-heart\"/></svg></span>Books&nbsp;\u2192<br><small class=\"text-secondary\">Round out your knowledge and learn offline</small></a>\n\n\n            \n<a class=\"dropdown-item \" href=\"/ref/\" style=\"color: #abe0e5; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@reference\"/></svg></span>Reference&nbsp;\u2192<br><small class=\"text-secondary\">Concise definitions for common Python terms</small></a>\n\n\n            \n              \n<a class=\"dropdown-item \" href=\"/mentor/\" style=\"color: #ffc873; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@code-mentor\"/></svg></span>Code Mentor&nbsp;\u2192<span class=\"float-right badge badge-pill badge-indigo\">Beta</span><br><small class=\"text-secondary\">Personalized code assistance &amp; learning tools</small></a>\n\n            \n\n            \n              \n              \n<a class=\"dropdown-item border-top\" href=\"/account/join/\" style=\"color: #ffc107; line-height: 110%;\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--star\"/></svg></span>Unlock All Content&nbsp;\u2192</a>\n\n              \n            \n          </div>\n        </li>\n\n        <li class=\"nav-item dropdown\">\n          <a class=\"nav-link rounded dropdown-toggle\" href=\"#\" id=\"navbarDropdownMore\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            More\n          </a>\n          <div class=\"dropdown-menu\" aria-labelledby=\"navbarDropdownMore\">\n            <a class=\"dropdown-item\" href=\"/learner-stories/\">Learner Stories</a>\n            <a class=\"dropdown-item\" href=\"/newsletter/\">Python Newsletter</a>\n            <a class=\"dropdown-item\" href=\"https://www.pythonjobshq.com\" target=\"_blank\">Python Job Board</a>\n            <a class=\"dropdown-item\" href=\"/team/\">Meet the Team</a>\n            <a class=\"dropdown-item\" href=\"/write-for-us/\">Become a Tutorial Writer</a>\n            <a class=\"dropdown-item\" href=\"/become-an-instructor/\">Become a Video Instructor</a>\n          </div>\n        </li>\n\n      </ul> \n\n      \n      <div class=\"d-block d-lg-none\"> \n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item\">\n            <a class=\"nav-link rounded\" href=\"/search\" title=\"Search\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--search\"/></svg></span> Search</a>\n          </li>\n        </ul>\n      </div>\n      \n      <div class=\"d-none d-lg-flex align-items-center mr-2 flex-fill\">\n        <form class=\"form-inline w-100 position-relative\" action=\"/search\" method=\"GET\">\n          <a class=\"js-search-form-submit position-absolute\" href=\"/search\" title=\"Search\" aria-hidden=\"true\" tabindex=\"-1\"><span class=\"icon baseline text-muted pl-2\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--search\"/></svg></span></a>\n          <input class=\"search-autocomplete search-field form-control form-control-md mr-sm-1 mr-lg-2 w-100\" style=\"padding-left: 2rem;\" maxlength=50 type=\"search\" placeholder=\"Search\" aria-label=\"Search\" aria-keyshortcuts=\"/ Control+J Meta+J\" name=\"q\" autocomplete=\"off\">\n          <span class=\"search-hotkey-indicator position-absolute px-2 border border-input text-input rounded small user-select-none\" style=\"right: 1em;\" title=\"Press / (forward slash) or Ctrl+J to open search\" aria-hidden=\"true\">/</span>\n          <input type=\"hidden\" name=\"_from\" value=\"nav\">\n        </form>\n      </div>\n      \n\n      <ul class=\"navbar-nav ml-auto\">\n        \n          <li class=\"nav-item form-inline mr-2 my-2 ml-3 ml-lg-0\">\n            <a class=\"btn btn-sm btn-primary px-5 px-lg-3\" href=\"/account/join/\">Join</a>\n          </li>\n        \n\n        \n          <li class=\"nav-item\">\n            <a class=\"nav-link rounded mx-0 px-lg-2\" href=\"/account/login/?next=%2Fbeautiful-soup-web-scraper-python%2F\">Sign&#8209;In</a>\n          </li>\n        \n      </ul>\n\n    \n    </div>\n\n  </div>\n\n  \n\n</nav>\n\n    \n\n    <div class=\"container main-content\">\n      \n\n      \n  <div class=\"row justify-content-center\">\n\n    \n    <aside class=\"col-md-7 col-lg-4 order-2 d-none d-lg-block\">\n      \n  \n\n\n\n\n<div class=\"card mb-3 bg-secondary\">\n  <form class=\"card-body\" action=\"/optins/process/\" method=\"post\">\n    <div class=\"form-group\">\n      <p class=\"h5 text-muted text-center\">\u2014 FREE Email Series \u2014</p>\n      <p class=\"h3 text-center\">\ud83d\udc0d Python Tricks \ud83d\udc8c</p>\n      <p><img loading=\"lazy\" class=\"img-fluid rounded\" src=\"/static/pytrick-dict-merge.4201a0125a5e.png\" width=\"738\" height=\"490\" alt=\"Python Tricks Dictionary Merge\"></p>\n    </div>\n    <div class=\"form-group\">\n      <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"cRHwqkG4XmMvkftxmMwKDAB7fajz1yzceYEEZrvg16eDPAhHZkRiD33ishMREydj\">\n      <input type=\"hidden\" name=\"slug\" value=\"static-python-tricks-sidebar\">\n      <input type=\"email\" class=\"form-control form-control-md\" name=\"email\" placeholder=\"Email&hellip;\" required>\n    </div>\n    <button type=\"submit\" name=\"submit\" class=\"btn btn-primary btn-md btn-block\">Get Python Tricks \u00bb</button>\n    <p class=\"mb-0 mt-2 text-muted text-center\">\ud83d\udd12 No spam. Unsubscribe any time.</p>\n  </form>\n</div>\n\n\n  \n\n\n<div class=\"sidebar-module sidebar-module-inset border\">\n  <a href=\"/tutorials/all/\" class=\"badge badge-light text-muted\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@category\"/></svg></span>Browse Topics</a>\n\n  <a href=\"/learning-paths/\" class=\"badge badge-light text-muted\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--map-location-dot\"/></svg></span>Guided Learning Paths</a>\n\n  <br>\n\n  <a href=\"/search?level=basics\" class=\"badge badge-light text-muted\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span> Basics</a>\n\n  <a href=\"/search?level=intermediate\" class=\"badge badge-light text-muted\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span><span class=\"icon baseline tight-left\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span> Intermediate</a>\n\n  <a href=\"/search?level=advanced\" class=\"badge badge-light text-muted\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span><span class=\"icon baseline tight-left\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span><span class=\"icon baseline tight-left\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@level\"/></svg></span> Advanced</a>\n\n  <hr class=\"my-2\">\n\n  \n    \n  \n    \n  \n    \n  \n    \n      \n<a href=\"/tutorials/api/\" class=\"badge badge-light text-muted\" data-previewable>api</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/best-practices/\" class=\"badge badge-light text-muted\" data-previewable>best-practices</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/career/\" class=\"badge badge-light text-muted\" data-previewable>career</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/community/\" class=\"badge badge-light text-muted\" data-previewable>community</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/databases/\" class=\"badge badge-light text-muted\" data-previewable>databases</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/data-science/\" class=\"badge badge-light text-muted\" data-previewable>data-science</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/data-structures/\" class=\"badge badge-light text-muted\" data-previewable>data-structures</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/data-viz/\" class=\"badge badge-light text-muted\" data-previewable>data-viz</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/devops/\" class=\"badge badge-light text-muted\" data-previewable>devops</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/django/\" class=\"badge badge-light text-muted\" data-previewable>django</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/docker/\" class=\"badge badge-light text-muted\" data-previewable>docker</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/editors/\" class=\"badge badge-light text-muted\" data-previewable>editors</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/flask/\" class=\"badge badge-light text-muted\" data-previewable>flask</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/front-end/\" class=\"badge badge-light text-muted\" data-previewable>front-end</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/gamedev/\" class=\"badge badge-light text-muted\" data-previewable>gamedev</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/gui/\" class=\"badge badge-light text-muted\" data-previewable>gui</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/machine-learning/\" class=\"badge badge-light text-muted\" data-previewable>machine-learning</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/numpy/\" class=\"badge badge-light text-muted\" data-previewable>numpy</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/projects/\" class=\"badge badge-light text-muted\" data-previewable>projects</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/python/\" class=\"badge badge-light text-muted\" data-previewable>python</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/testing/\" class=\"badge badge-light text-muted\" data-previewable>testing</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/tools/\" class=\"badge badge-light text-muted\" data-previewable>tools</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/web-dev/\" class=\"badge badge-light text-muted\" data-previewable>web-dev</a>\n\n    \n  \n    \n      \n<a href=\"/tutorials/web-scraping/\" class=\"badge badge-light text-muted\" data-previewable>web-scraping</a>\n\n    \n  \n</div>\n\n\n\n  \n<div class=\"sidebar-module sidebar-module-inset p-0\" style=\"overflow:hidden;\">\n  \n<div style=\"display:block;position:relative;\">\n  <div style=\"display:block;width:100%;padding-top:100%;\"></div>\n  <div class=\"rpad\" data-unit=\"1x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"></div>\n</div>\n\n\n</div>\n\n\n\n  <div class=\"sidebar-sticky \">\n    \n      \n\n\n<table-of-contents>\n  <div class=\"bg-light sidebar-module sidebar-module-inset text-wrap-pretty\">\n    <p class=\"h4 text-muted\"><a class=\"link-unstyled\" href=\"#toc\">Table of Contents</a></p>\n    <div class=\"toc\">\n<ul>\n<li><a href=\"#what-is-web-scraping\">What Is Web Scraping?</a><ul>\n<li><a href=\"#reasons-for-automated-web-scraping\">Reasons for Automated Web Scraping</a></li>\n<li><a href=\"#challenges-of-web-scraping\">Challenges of Web Scraping</a></li>\n<li><a href=\"#an-alternative-to-web-scraping-apis\">An Alternative to Web Scraping: APIs</a></li>\n</ul>\n</li>\n<li><a href=\"#scrape-the-fake-python-job-site\">Scrape the Fake Python Job Site</a></li>\n<li><a href=\"#step-1-inspect-your-data-source\">Step 1: Inspect Your Data Source</a><ul>\n<li><a href=\"#explore-the-website\">Explore the Website</a></li>\n<li><a href=\"#decipher-the-information-in-urls\">Decipher the Information in URLs</a></li>\n<li><a href=\"#inspect-the-site-using-developer-tools\">Inspect the Site Using Developer Tools</a></li>\n</ul>\n</li>\n<li><a href=\"#step-2-scrape-html-content-from-a-page\">Step 2: Scrape HTML Content From a Page</a><ul>\n<li><a href=\"#static-websites\">Static Websites</a></li>\n<li><a href=\"#login-protected-websites\">Login-Protected Websites</a></li>\n<li><a href=\"#dynamic-websites\">Dynamic Websites</a></li>\n</ul>\n</li>\n<li><a href=\"#step-3-parse-html-code-with-beautiful-soup\">Step 3: Parse HTML Code With Beautiful Soup</a><ul>\n<li><a href=\"#find-elements-by-id\">Find Elements by ID</a></li>\n<li><a href=\"#find-elements-by-html-class-name\">Find Elements by HTML Class Name</a></li>\n<li><a href=\"#extract-text-from-html-elements\">Extract Text From HTML Elements</a></li>\n<li><a href=\"#find-elements-by-class-name-and-text-content\">Find Elements by Class Name and Text Content</a></li>\n<li><a href=\"#pass-a-function-to-a-beautiful-soup-method\">Pass a Function to a Beautiful Soup Method</a></li>\n<li><a href=\"#identify-error-conditions\">Identify Error Conditions</a></li>\n<li><a href=\"#access-parent-elements\">Access Parent Elements</a></li>\n<li><a href=\"#extract-attributes-from-html-elements\">Extract Attributes From HTML Elements</a></li>\n</ul>\n</li>\n<li><a href=\"#assemble-your-code-in-a-script\">Assemble Your Code in a Script</a></li>\n<li><a href=\"#keep-practicing\">Keep Practicing</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n<li><a href=\"#frequently-asked-questions\">Frequently Asked Questions</a></li>\n</ul>\n</div>\n\n  </div>\n</table-of-contents>\n\n    \n\n    <div class=\"sidebar-module sidebar-module-inset d-flex justify-content-center flex-wrap row-gap-1 col-gap-2 my-3 py-0\">\n      \n\n\n<completion-status\n  class=\"btn-group mb-0\"\n  article-slug=\"beautiful-soup-web-scraper-python\"\n  \n  \n  \n  data-api-article-bookmark-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/bookmark/\"\n  data-api-article-completion-status-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/completion_status/\">\n  <button\n    data-target-complete-button\n    title=\"Click to mark as completed\"\n    class=\"btn btn-secondary border-right\"\n    style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\"\n    disabled>Mark as Completed</button>\n  <button\n    data-target-bookmark-button\n    title=\"Add bookmark\"\n    class=\"btn btn-secondary border-left\"\n    disabled><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--bookmark\"/></svg></span></button>\n</completion-status>\n\n      <div class=\"w-100\"></div> \n      \n<div class=\"btn-group mb-0\">\n  <a class=\"btn btn-secondary border-right\" style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\" title=\"Liked it\" role=\"button\" aria-label=\"Thumbs up (liked it)\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/liked/?from=article-sidebar\" target=\"_blank\"><span class=\"icon\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-up\"/></svg></span></a> \n  <a class=\"btn btn-secondary border-left\" role=\"button\" aria-label=\"Thumbs down (disliked it)\" title=\"Disliked it\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/disliked/?from=article-sidebar\" target=\"_blank\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-down\"/></svg></span></a>\n</div>\n\n      \n        \n\n\n\n\n\n\n\n\n\n<share-button\n  url=\"https://realpython.com/beautiful-soup-web-scraper-python/\"\n  url-title=\"Beautiful Soup: Build a Web Scraper With Python\"\n  twitter-text=\"Interesting #Python article by @realpython:\"\n  bluesky-text=\"Interesting #Python article by @realpython.com:\"\n  email-subject=\"Python article for you\"\n  email-body=\"Check out this Python article:%0A%0ABeautiful Soup: Build a Web Scraper With Python\"\n>\n  <button class=\"btn btn-secondary\" type=\"button\" title=\"Share\" aria-label=\"Share\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@share-light\"/></svg></span>Share</button>\n</share-button>\n\n\n      \n    </div>\n\n    \n      <div class=\"sidebar-module sidebar-module-inset border card\">\n        <p><span class=\"badge badge-pill badge-success\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--play-circle\"/></svg></span> Recommended Video Course</span><br><a class=\"stretched-link text-success\" href=\"/courses/web-scraping-beautiful-soup/\">Web Scraping With Beautiful Soup and Python</a></p>\n      </div>\n    \n\n    \n      <div class=\"sidebar-module sidebar-module-inset p-0\" style=\"overflow:hidden;\">\n        \n<div style=\"display:block;position:relative;\">\n  <div style=\"display:block;width:100%;padding-top:25%;\"></div>\n  <div class=\"rpad\" data-unit=\"4x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"></div>\n</div>\n\n\n      </div>\n    \n\n    \n  </div>\n\n\n    </aside>\n\n    <div class=\"col-md-11 col-lg-8 article with-headerlinks\">\n      \n\n  \n    <figure class=\"embed-responsive embed-responsive-16by9 rounded\">\n      \n        <img class=\"card-img-top m-0 p-0 embed-responsive-item\" style=\"object-fit: contain; background: #ffc873;\" alt=\"Beautiful Soup: Build a Web Scraper With Python\" width=\"1920\" height=\"1080\" src=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\" srcset=\"/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 1920w\" sizes=\"(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)\" fetchpriority=\"high\">\n      \n    </figure>\n  \n\n  <h1>Beautiful Soup: Build a Web Scraper With Python</h1>\n  <div class=\"mb-0\">\n    \n      <span class=\"text-muted\">by <a class=\"text-muted\" href=\"#author\">Martin Breuss</a>\n    \n    \n      <span class=\"icon baseline ml-2\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--clock-o\"/></svg></span> Dec 01, 2024\n    \n    \n      <span class=\"icon baseline ml-2 mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--comments\"/></svg></span><a class=\"text-muted\" href=\"#reader-comments\"><span class=\"disqus-comment-count\" data-disqus-identifier=\"https://realpython.com/beautiful-soup-web-scraper-python/\"></span></a>\n    \n    \n\n    <span class=\"d-inline d-md-block\"> \n      <span class=\"icon baseline ml-2 ml-md-0\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@category\"/></svg></span>\n      \n        \n<a href=\"/tutorials/intermediate/\" class=\"badge badge-light text-muted\" data-previewable>intermediate</a>\n\n      \n        \n<a href=\"/tutorials/data-science/\" class=\"badge badge-light text-muted\" data-previewable>data-science</a>\n\n      \n        \n<a href=\"/tutorials/tools/\" class=\"badge badge-light text-muted\" data-previewable>tools</a>\n\n      \n        \n<a href=\"/tutorials/web-scraping/\" class=\"badge badge-light text-muted\" data-previewable>web-scraping</a>\n\n      \n    </span>\n\n    <div class=\"d-flex justify-content-between gap-2 my-3\">\n      \n\n\n<completion-status\n  class=\"btn-group mb-0\"\n  article-slug=\"beautiful-soup-web-scraper-python\"\n  \n  \n  \n  data-api-article-bookmark-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/bookmark/\"\n  data-api-article-completion-status-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/completion_status/\">\n  <button\n    data-target-complete-button\n    title=\"Click to mark as completed\"\n    class=\"btn btn-secondary border-right\"\n    style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\"\n    disabled>Mark as Completed</button>\n  <button\n    data-target-bookmark-button\n    title=\"Add bookmark\"\n    class=\"btn btn-secondary border-left\"\n    disabled><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--bookmark\"/></svg></span></button>\n</completion-status>\n\n      \n        \n\n\n\n\n\n\n\n\n\n<share-button\n  url=\"https://realpython.com/beautiful-soup-web-scraper-python/\"\n  url-title=\"Beautiful Soup: Build a Web Scraper With Python\"\n  twitter-text=\"Interesting #Python article by @realpython:\"\n  bluesky-text=\"Interesting #Python article by @realpython.com:\"\n  email-subject=\"Python article for you\"\n  email-body=\"Check out this Python article:%0A%0ABeautiful Soup: Build a Web Scraper With Python\"\n>\n  <button class=\"btn btn-secondary\" type=\"button\" title=\"Share\" aria-label=\"Share\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@share-light\"/></svg></span>Share</button>\n</share-button>\n\n\n      \n    </div>\n  </div>\n\n  \n\n  <div class=\"article-body\">\n    \n      <div class=\"bg-light sidebar-module sidebar-module-inset\" id=\"toc\">\n        <p class=\"h3 mb-2 text-muted\">Table of Contents</p>\n        <div class=\"toc\">\n<ul>\n<li><a href=\"#what-is-web-scraping\">What Is Web Scraping?</a><ul>\n<li><a href=\"#reasons-for-automated-web-scraping\">Reasons for Automated Web Scraping</a></li>\n<li><a href=\"#challenges-of-web-scraping\">Challenges of Web Scraping</a></li>\n<li><a href=\"#an-alternative-to-web-scraping-apis\">An Alternative to Web Scraping: APIs</a></li>\n</ul>\n</li>\n<li><a href=\"#scrape-the-fake-python-job-site\">Scrape the Fake Python Job Site</a></li>\n<li><a href=\"#step-1-inspect-your-data-source\">Step 1: Inspect Your Data Source</a><ul>\n<li><a href=\"#explore-the-website\">Explore the Website</a></li>\n<li><a href=\"#decipher-the-information-in-urls\">Decipher the Information in URLs</a></li>\n<li><a href=\"#inspect-the-site-using-developer-tools\">Inspect the Site Using Developer Tools</a></li>\n</ul>\n</li>\n<li><a href=\"#step-2-scrape-html-content-from-a-page\">Step 2: Scrape HTML Content From a Page</a><ul>\n<li><a href=\"#static-websites\">Static Websites</a></li>\n<li><a href=\"#login-protected-websites\">Login-Protected Websites</a></li>\n<li><a href=\"#dynamic-websites\">Dynamic Websites</a></li>\n</ul>\n</li>\n<li><a href=\"#step-3-parse-html-code-with-beautiful-soup\">Step 3: Parse HTML Code With Beautiful Soup</a><ul>\n<li><a href=\"#find-elements-by-id\">Find Elements by ID</a></li>\n<li><a href=\"#find-elements-by-html-class-name\">Find Elements by HTML Class Name</a></li>\n<li><a href=\"#extract-text-from-html-elements\">Extract Text From HTML Elements</a></li>\n<li><a href=\"#find-elements-by-class-name-and-text-content\">Find Elements by Class Name and Text Content</a></li>\n<li><a href=\"#pass-a-function-to-a-beautiful-soup-method\">Pass a Function to a Beautiful Soup Method</a></li>\n<li><a href=\"#identify-error-conditions\">Identify Error Conditions</a></li>\n<li><a href=\"#access-parent-elements\">Access Parent Elements</a></li>\n<li><a href=\"#extract-attributes-from-html-elements\">Extract Attributes From HTML Elements</a></li>\n</ul>\n</li>\n<li><a href=\"#assemble-your-code-in-a-script\">Assemble Your Code in a Script</a></li>\n<li><a href=\"#keep-practicing\">Keep Practicing</a></li>\n<li><a href=\"#conclusion\">Conclusion</a></li>\n<li><a href=\"#frequently-asked-questions\">Frequently Asked Questions</a></li>\n</ul>\n</div>\n\n      </div>\n    \n\n    \n    <div class=\"sidebar-module sidebar-module-inset p-0\" style=\"overflow:hidden;\">\n      \n\n<div style=\"display:block;position:relative;\">\n  <div st\r\n396a\r\nyle=\"display:block;width:100%;padding-top:12.5%;\"></div>\n  <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"></div>\n</div>\n<a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"/></svg></span>Remove ads</a>\n\n\n    </div>\n    \n\n    \n      \n<div class=\"border rounded p-3 card mb-2 text-wrap-pretty\">\n  <p class=\"mb-0\"><span class=\"badge badge-pill badge-success\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--play-circle\"/></svg></span> Watch Now</span> This tutorial has a related video course created by the Real Python team. Watch it together with the written tutorial to deepen your understanding: <a class=\"stretched-link text-success\" href=\"/courses/web-scraping-beautiful-soup/\"><strong>Web Scraping With Beautiful Soup and Python</strong></a></p>\n</div>\n\n    \n\n    <p>Beautiful Soup is a Python library designed for parsing HTML and XML documents. It creates parse trees that make it straightforward to extract data from HTML documents you&rsquo;ve scraped from the internet. Beautiful Soup is a useful tool in your <a href=\"https://realpython.com/python-web-scraping-practical-introduction/\">web scraping</a> toolkit, allowing you to conveniently extract specific information from HTML, even from complex static websites.</p>\n<p>In this tutorial, you&rsquo;ll learn how to build a web scraper using Beautiful Soup along with the <a href=\"https://realpython.com/python-requests/\">Requests library</a> to scrape and parse job listings from a static website.\nStatic websites provide consistent HTML content, while dynamic sites may require handling JavaScript. For dynamic websites, you&rsquo;ll need to incorporate additional tools that can execute JavaScript, such as <a href=\"https://realpython.com/web-scraping-with-scrapy-and-mongodb/\">Scrapy</a> or <a href=\"https://realpython.com/modern-web-automation-with-python-and-selenium/\">Selenium</a>.</p>\n<p><strong>By the end of this tutorial, you&rsquo;ll understand that:</strong></p>\n<ul>\n<li>You can use Beautiful Soup for <strong>parsing HTML and XML</strong> documents to <strong>extract data from web pages</strong>.</li>\n<li>Beautiful Soup is <strong>named after a song</strong> in <em>Alice&rsquo;s Adventures in Wonderland</em> by Lewis Carroll, based on its <strong>ability to tackle poorly structured HTML</strong> known as <em>tag soup</em>.</li>\n<li>You&rsquo;ll often use <strong>Beautiful Soup</strong> in your web scraping pipeline when scraping <strong>static content</strong>, while you&rsquo;ll need additional tools such as <strong>Selenium</strong> to handle dynamic, <strong>JavaScript-rendered</strong> pages.</li>\n<li>Using Beautiful Soup is <strong>legal</strong> because you only use it for parsing documents. Web scraping in general is also legal if you respect a website&rsquo;s <strong>terms of service</strong> and copyright laws.</li>\n</ul>\n<p>Working through this project will give you the knowledge and tools that you need to scrape any static website out there on the World Wide Web.\nIf you like learning with hands-on examples and have a basic understanding of Python and <a href=\"https://realpython.com/html-css-python/\">HTML</a>, then this tutorial is for you! \nYou can download the project source code by clicking on the link below:</p>\n<div class=\"alert alert-warning\" role=\"alert\">\n<p><strong markdown=\"1\">Get Your Code:</strong> <a href=\"https://realpython.com/bonus/beautiful-soup-web-scraper-python-code/\" class=\"alert-link\" data-toggle=\"modal\" data-target=\"#modal-beautiful-soup-web-scraper-python-code\" data-focus=\"false\" markdown=\"1\">Click here to download the free sample code </a> that you&rsquo;ll use to learn about web scraping in Python.</p>\n</div>\n<div class=\"container border rounded text-wrap-pretty my-3\">\n\n  <p class=\"my-3\"><mark class=\"marker-highlight\"><strong><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@quiz\"/></svg></span> Take the Quiz:</strong></mark> Test your knowledge with our interactive \u201cBeautiful Soup: Build a Web Scraper With Python\u201d quiz. You\u2019ll receive a score upon completion to help you track your learning progress:</p>\n\n  <hr>\n\n  <div class=\"row my-3\">\n    <div class=\"col-xs-12 col-sm-4 col-md-3 align-self-center\">\n\n      <a href=\"/quizzes/beautiful-soup-web-scraper-python/\" tabindex=\"-1\">\n        <div class=\"embed-responsive embed-responsive-16by9\">\n\n            <img class=\"card-img-top m-0 p-0 embed-responsive-item rounded\" style=\"object-fit: contain; background: #ffc873;\" alt=\"Beautiful Soup: Build a Web Scraper With Python\" src=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\" width=\"1920\" height=\"1080\" srcset=\"/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 1920w\" sizes=\"(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)\">\n\n\n          <div class=\"card-img-overlay d-flex align-items-center\">\n            <div class=\"mx-auto\">\n              <span class=\"text-light\" style=\"opacity: 0.90;\"><span class=\"icon baseline scale2x\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@quiz\"/></svg></span></span>\n            </div>\n          </div>\n        </div>\n      </a>\n\n    </div>\n    <div class=\"col\">\n      <div class=\"mt-3 d-md-none\"></div> \n      <p class=\"small text-muted mb-0\"><strong>Interactive Quiz</strong></p>\n      <a href=\"/quizzes/beautiful-soup-web-scraper-python/\" class=\"stretched-link\"><span class=\"my-0 h4\">Beautiful Soup: Build a Web Scraper With Python</span></a> \n      <p class=\"text-muted mb-0 small\">In this quiz, you&#x27;ll test your understanding of web scraping using Python. By working through this quiz, you&#x27;ll revisit how to inspect the HTML structure of a target site, decipher data encoded in URLs, and use Requests and Beautiful Soup for scraping and parsing data.</p>\n    </div>\n  </div>\n\n</div>\n\n<section class=\"section2\"><h2 id=\"what-is-web-scraping\">What Is Web Scraping?<a class=\"headerlink\" href=\"#what-is-web-scraping\" title=\"Permanent link\"></a></h2>\n<p><strong>Web scraping</strong> is the process of gathering information from the internet. Even copying and pasting the lyrics of your favorite song can be considered a form of web scraping! However, the term &ldquo;web scraping&rdquo; usually refers to a process that involves automation. While some websites don&rsquo;t like it when automatic scrapers gather their data, which can lead to <a href=\"https://realpython.com/podcasts/rpp/12/\">legal issues</a>, others don&rsquo;t mind it.</p>\n<p>If you&rsquo;re scraping a page respectfully for educational purposes, then you&rsquo;re unlikely to have any problems. Still, it&rsquo;s a good idea to do some research on your own to make sure you&rsquo;re not violating any Terms of Service before you start a large-scale web scraping project.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div><section class=\"section3\"><h3 id=\"reasons-for-automated-web-scraping\">Reasons for Automated Web Scraping<a class=\"headerlink\" href=\"#reasons-for-automated-web-scraping\" title=\"Permanent link\"></a></h3>\n<p>Say that you like to surf&mdash;both in the ocean and online&mdash;and you&rsquo;re looking for employment. It&rsquo;s clear that you&rsquo;re not interested in just <em>any</em> job. With a surfer&rsquo;s mindset, you&rsquo;re waiting for the perfect opportunity to roll your way!</p>\n<p>You know about a job site that offers precisely the kinds of jobs you want. Unfortunately, a new position only pops up once in a blue moon, and the site doesn&rsquo;t provide an email notification service. You consider checking up on it every day, but that doesn&rsquo;t sound like the most fun and productive way to spend your time. You&rsquo;d rather be outside surfing real-life waves!</p>\n<p>Thankfully, Python offers a way to apply your surfer&rsquo;s mindset. Instead of having to check the job site every day, you can use Python to help automate the repetitive parts of your job search. With <strong>automated web scraping</strong>, you can write the code once, and it&rsquo;ll get the information that you need many times and from many pages.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> In contrast, when you try to get information manually, you might spend a lot of time clicking, scrolling, and searching, especially if you need large amounts of data from websites that are regularly updated with new content. Manual web scraping can take a lot of time and be highly repetitive and error-prone.</p>\n</div>\n<p>There&rsquo;s so much information on the internet, with new information constantly being added. You&rsquo;ll probably be interested in some of that data, and much of it is out there for the taking. Whether you&rsquo;re actually on the job hunt or just want to automatically download all the lyrics of your favorite artist, automated web scraping can help you accomplish your goals.</p>\n</section><section class=\"section3\"><h3 id=\"challenges-of-web-scraping\">Challenges of Web Scraping<a class=\"headerlink\" href=\"#challenges-of-web-scraping\" title=\"Permanent link\"></a></h3>\n<p>The internet has grown organically out of many sources. It combines many different technologies, styles, and personalities, and it continues to grow every day. In other words, the internet is a hot mess! Because of this, you&rsquo;ll run into some challenges when scraping the web:</p>\n<ul>\n<li>\n<p><strong>Variety:</strong> Every website is different. While you&rsquo;ll encounter general structures that repeat themselves, each website is unique and will need personal treatment if you want to extract the relevant information.</p>\n</li>\n<li>\n<p><strong>Durability:</strong> Websites constantly change. Say you&rsquo;ve built a shiny new web scraper that automatically cherry-picks what you want from your resource of interest. The first time you <a href=\"https://realpython.com/run-python-scripts/\">run your script</a>, it works flawlessly. But when you run the same script a while later, you run into a discouraging and lengthy stack of <a href=\"https://realpython.com/python-traceback/\">tracebacks</a>!</p>\n</li>\n</ul>\n<p>Unstable scripts are a realistic scenario because many websites are in active development. If a site&rsquo;s structure changes, then your scraper might not be able to navigate the sitemap correctly or find the relevant information. The good news is that changes to websites are often small and incremental, so you&rsquo;ll likely be able to update your scraper with minimal adjustments.</p>\n<p>Still, keep in mind that the internet is dynamic and keeps on changing. Therefore, the scrapers you build will probably require maintenance. You can set up <a href=\"https://realpython.com/python-continuous-integration/\">continuous integration</a> to run scraping tests periodically to ensure that your main script doesn&rsquo;t break without your knowledge.</p>\n</section><section class=\"section3\"><h3 id=\"an-alternative-to-web-scraping-apis\">An Alternative to Web Scraping: APIs<a class=\"headerlink\" href=\"#an-alternative-to-web-scraping-apis\" title=\"Permanent link\"></a></h3>\n<p>Some website providers offer <a href=\"https://realpython.com/python-api/\">application programming interfaces (APIs)</a> that allow you to access their data in a predefined manner. With APIs, you can avoid parsing <a href=\"https://realpython.com/html-css-python/\">HTML</a>. Instead, you can access the data directly using formats like <a href=\"https://realpython.com/python-json/\">JSON</a> and <a href=\"https://realpython.com/python-xml-parser/\">XML</a>. HTML is primarily a way to visually present content to users.</p>\n<p>When you use an API, the data collection process is generally more stable than it is through web scraping. That&rsquo;s because developers create APIs to be consumed by programs rather than by human eyes.</p>\n<p>The front-end presentation of a site might change often, but a change in the website&rsquo;s design doesn&rsquo;t affect its API structure. The structure of an API is usually more permanent, which means it&rsquo;s a more reliable source of the site&rsquo;s data.</p>\n<p>However, APIs <em>can</em> change as well. The challenges of both variety and durability apply to APIs just as they do to websites. Additionally, it&rsquo;s much harder to inspect the structure of an API by yourself if the provided documentation lacks quality.</p>\n<p>The approach and tools you need to gather information using APIs is outside the scope of this tutorial. To learn more about it, check out <a href=\"https://realpython.com/api-integration-in-python/\">API Integration in Python</a>.</p>\n</section></section><section class=\"section2\"><h2 id=\"scrape-the-fake-python-job-site\">Scrape the Fake Python Job Site<a class=\"headerlink\" href=\"#scrape-the-fake-python-job-site\" title=\"Permanent link\"></a></h2>\n<p>In this tutorial, you&rsquo;ll build a web scraper that fetches Python software developer job listings from a <a href=\"https://realpython.github.io/fake-jobs/\">fake Python job site</a>. It&rsquo;s an example site with fake job postings that you can freely scrape to train your skills. Your web scraper will parse the HTML on the site to pick out the relevant information and filter that content for specific words.</p>\n<p>You can scrape any site o\r\n7ff9\r\nn the internet that you can look at, but the difficulty of doing so depends on the site. This tutorial offers you an introduction to web scraping to help you understand the overall process. Then, you can apply this same process for every website that you want to scrape.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> Real-life job boards may quickly change in structure and availability. To offer you a smooth learning experience, this tutorial focuses on a self-hosted static site that&rsquo;s guaranteed to stay the same. This gives you a reliable playground to practice the skills that you need for web scraping.</p>\n</div>\n<p>Throughout the tutorial, you&rsquo;ll also encounter a few <strong>exercise blocks</strong>. You can click to expand them and challenge yourself by completing the tasks described within.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section2\"><h2 id=\"step-1-inspect-your-data-source\">Step 1: Inspect Your Data Source<a class=\"headerlink\" href=\"#step-1-inspect-your-data-source\" title=\"Permanent link\"></a></h2>\n<p>Before you write any Python code, you need to get to know the website that you want to scrape. Getting to know the website should be your first step for any web scraping project that you want to tackle. You&rsquo;ll need to understand the site structure to extract the information relevant for you. Start by opening <a href=\"https://realpython.github.io/fake-jobs/\">the site that you want to scrape</a> with your favorite browser.</p>\n<section class=\"section3\"><h3 id=\"explore-the-website\">Explore the Website<a class=\"headerlink\" href=\"#explore-the-website\" title=\"Permanent link\"></a></h3>\n<p>Click through the site and interact with it just like any typical job searcher would. For example, you can scroll through the main page of the website:</p>\n<figure class=\"js-lightbox\"><a href=\"https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png\" target=\"_blank\"><img loading=\"lazy\" class=\"img-fluid mx-auto d-block border \" src=\"https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png\" width=\"1440\" height=\"900\" srcset=\"/cdn-cgi/image/width=360,format=auto/https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png 360w, /cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png 480w, /cdn-cgi/image/width=720,format=auto/https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png 720w, /cdn-cgi/image/width=1440,format=auto/https://files.realpython.com/media/bs4-fake-python-index.b76716592442.png 1440w\" sizes=\"(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)\" alt=\"Index page of the Fake Python job board\" data-asset=\"3595\"/></a></figure>\n\n<p>On that page, you can see many job postings in a card format. Each of them has two buttons. If you click on <em>Learn</em>, then you&rsquo;ll visit <a href=\"https://realpython.com/\">Real Python&rsquo;s home page</a>. If you click on <em>Apply</em>, then you&rsquo;ll see a new page that contains more detailed descriptions of the job on that card. You might also notice that the URL in your browser&rsquo;s address bar changes when you navigate to one of those pages.</p>\n</section><section class=\"section3\"><h3 id=\"decipher-the-information-in-urls\">Decipher the Information in URLs<a class=\"headerlink\" href=\"#decipher-the-information-in-urls\" title=\"Permanent link\"></a></h3>\n<p>You can encode a lot of <a href=\"https://developer.mozilla.org/en-US/docs/Learn/Common_questions/Web_mechanics/What_is_a_URL\">information in a URL</a>. Becoming familiar with how URLs work and what they&rsquo;re made of will help you on your web scraping journey. For example, you might find yourself on a details page that has the following URL:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"text\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--grey\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Text</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code>https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>You can deconstruct the above URL into two main parts:</p>\n<ol>\n<li><strong>The base URL</strong> points to the main location of the web resource. In the example above, the base URL is <code>https://realpython.github.io/</code>.</li>\n<li><strong>The path</strong> to a specific resource location points to a unique job description. In the example above, the path is <code>fake-jobs/jobs/senior-python-developer-0.html</code>.</li>\n</ol>\n<p>Any job posted on this website will share the same base URL. However, the location of the unique resources will be different depending on the job posting that you view. Usually, similar resources on a website will share a similar location, such as the folder structure <code>fake-jobs/jobs/</code>. However, the final part of the path points to a specific resource and will be different for each job posting. In this case, it&rsquo;s a static HTML file named <code>senior-python-developer-0.html</code>.</p>\n<p>URLs can hold more information than just the location of a file. Some websites use <strong>query parameters</strong> to encode values that you submit when performing a search. You can think of them as query strings that you send to the database to retrieve specific records.</p>\n<p>You&rsquo;ll find query parameters at the end of a URL. For example, if you go to <a href=\"https://au.indeed.com/\">Indeed</a> and search for &ldquo;software developer&rdquo; in &ldquo;Australia&rdquo; through the site&rsquo;s search bar, you&rsquo;ll see that the URL changes to include these values as query parameters:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"text\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--grey\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Text</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code>https://au.indeed.com/jobs?q=software+developer&amp;l=Australia\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>The query parameters in this URL are <code>?q=software+developer&amp;l=Australia</code>. Query parameters consist of three parts:</p>\n<ol>\n<li><strong>Start:</strong> You can identify the beginning of the query parameters by looking for the question mark (<code>?</code>).</li>\n<li><strong>Information:</strong> You&rsquo;ll find the pieces of information that constitute one query parameter encoded in key-value pairs, where related keys and values are joined together by an equal sign (<code>key=value</code>).</li>\n<li><strong>Separator:</strong> You&rsquo;ll see an ampersand symbol (<code>&amp;</code>) separating multiple query parameters if there are more than one.</li>\n</ol>\n<p>Equipped with this information, you can separate the URL&rsquo;s query parameters into two key-value pairs:</p>\n<ol>\n<li><strong><code>q=software+developer</code></strong> selects the type of job.</li>\n<li><strong><code>l=Australia</code></strong> selects the location of the job.</li>\n</ol>\n<p>Try to change the search parameters and observe how that affects your URL. Go ahead and enter new values in the search bar of the Indeed job board:</p>\n<figure class=\"\"><img loading=\"lazy\" class=\"img-fluid mx-auto d-block border w-75\" src=\"https://files.realpython.com/media/bs4-indeed-search.84b9459787e7.png\" width=\"1440\" height=\"900\" srcset=\"/cdn-cgi/image/width=360,format=auto/https://files.realpython.com/media/bs4-indeed-search.84b9459787e7.png 360w, /cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/bs4-indeed-search.84b9459787e7.png 480w, /cdn-cgi/image/width=720,format=auto/https://files.realpython.com/media/bs4-indeed-search.84b9459787e7.png 720w, /cdn-cgi/image/width=1440,format=auto/https://files.realpython.com/media/bs4-indeed-search.84b9459787e7.png 1440w\" sizes=\"(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)\" alt=\"Search interface of the Indeed job board\" data-asset=\"3597\"/><figcaption class=\"figure-caption text-center\">Change these values to observe the changes in the URL.</figcaption></figure>\n\n<p>Next, try to change the values directly in your URL. See what happens when you paste the following URL into your browser&rsquo;s address bar:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"text\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--grey\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Text</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code>https://au.indeed.com/jobs?q=developer&amp;l=perth\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>If you change and submit the values in the website&rsquo;s search box, then it&rsquo;ll be directly reflected in the URL&rsquo;s query parameters and vice versa. If you change either of them, then you&rsquo;ll see different results on the website.</p>\n<p>As you can see, exploring the URLs of a site can give you insight into how to retrieve data from the website&rsquo;s server.</p>\n<p>Head back to <a href=\"https://realpython.github.io/fake-jobs/\">Fake Python</a> jobs and continue to explore it. This site is a static website containing hardcoded information. It doesn&rsquo;t operate on top of a database, which is why you won&rsquo;t have to work with query parameters in this scraping tutorial.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section3\"><h3 id=\"inspect-the-site-using-developer-tools\">Inspect the Site Using Developer Tools<a class=\"headerlink\" href=\"#inspect-the-site-using-developer-tools\" title=\"Permanent link\"></a></h3>\n<p>Next, you&rsquo;ll want to learn more about how the data is structured for display. You&rsquo;ll need to understand the page structure to pick what you want from the HTML response that you&rsquo;ll collect in <a href=\"#step-2-scrape-html-content-from-a-page\">one of the upcoming steps</a>.</p>\n<p><strong>Developer tools</strong> can help you understand the structure of a website. All modern browsers come with developer tools installed. In this section, you&rsquo;ll learn how to work with the developer tools in Chrome. The process will be very similar on other modern browsers.</p>\n<p>In Chrome on macOS, you can open up the developer tools through the menu by selecting <em>View</em> \u2192 <em>Developer</em> \u2192 <em>Developer Tools</em>. On Windows and Linux, you can access them by clicking the top-right menu button (<code>\u22ee</code>) and selecting <em>More Tools</em> \u2192 <em>Developer Tools</em>. You can also access your developer tools by right-clicking on the page and selecting the <em>Inspect</em> option or using a <a href=\"https://developer.chrome.com/docs/devtools/shortcuts/\">keyboard shortcut</a>:</p>\n<ul>\n<li><strong>Mac:</strong> <span class=\"keys\"><kbd class=\"key-command\">Cmd</kbd><span>+</span><kbd class=\"key-alt\">Alt</kbd><span>+</span><kbd class=\"key-i\">I</kbd></span></li>\n<li><strong>Windows/Linux:</strong> <span class=\"keys\"><kbd class=\"key-control\">Ctrl</kbd><span>+</span><kbd class=\"key-shift\">Shift</kbd><span>+</span><kbd class=\"key-i\">I</kbd></span></li>\n</ul>\n<p>Developer tools allow you to interactively explore the site&rsquo;s <a href=\"https://en.wikipedia.org/wiki/Document_Object_Model\">document object model (DOM)</a> to better understand your source. To dig into your page&rsquo;s DOM, select the <em>Elements</em> tab in developer tools. You&rsquo;ll see a structure with clickable HTML elements. You can expand, collapse, and even edit elements right in your browser:</p>\n<figure class=\"js-lightbox\"><a href=\"https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png\" target=\"_blank\"><img loading=\"lazy\" class=\"img-fluid mx-auto d-block border \" src=\"https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png\" width=\"1440\" height=\"900\" srcset=\"/cdn-cgi/image/width=360,format=auto/https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png 360w, /cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png 480w, /cdn-cgi/image/width=720,format=auto/https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png 720w, /cdn-cgi/image/width=1440,format=auto/https://files.realpython.com/media/bs4-devtools.f0a236ca5fa3.png 1440w\" sizes=\"(min-width: 1200px) 690px, (min-width: 780px) calc(-5vw + 669px), (min-width: 580px) 510px, calc(100vw - 30px)\" alt=\"Chrome developer tools open showing the HTML of a Fake Python job board card\" data-asset=\"3596\"/></a><figcaption class=\"figure-caption text-center\">The HTML on the right represents the structure of the page you can see on the left.</figcaption></figure>\n\n<p>You can think of the text displayed in your browser as the HTML structure of the page. If you&rsquo;re interested, then you can read more about the <a href=\"https://css-tricks.com/dom/\">difference between the DOM and HTML</a>.</p>\n<p>When you right-click elements on the page, you can select <em>Inspect</em> to zoom to their location in the DOM. You can also hover over the HTML text on your right and see the corresponding elements light up on the page.</p>\n<p>Click to expand the exercise block for a specific task to practice using your developer tools:</p>\n<div class=\"card mb-3\" id=\"collapse_cardb998a6\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapseb998a6\" aria-expanded=\"false\" aria-controls=\"collapseb998a6\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\">Exercise: Explore the HTML</span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_cardb998a6\" id=\"collapseb998a6\">\n<div class=\"card-body\">\n<p>Find a single job posting. What HTML element is it wrapped in, and what other HTML elements does it contain?</p>\n</div>\n</div>\n</div>\n<p>Play around and explore! The more you get to know the page you&rsquo;re working with, the easier it&rsquo;ll be to scrape. But don&rsquo;t get too overwhelmed with all that HTML text. You&rsquo;ll use the power of programming to step through this maze and cherry-pick the information that&rsquo;s relevant to you.</p>\n</section></section><section class=\"section2\"><h2 id=\"step-2-scrape-html-content-from-a-page\">Step 2: Scrape HTML Content From a Page<a class=\"headerlink\" href=\"#step-2-scrape-html-content-from-a-page\" title=\"Permanent link\"></a></h2>\n<p>Now that you have an idea of what you&rsquo;re working with, it&rsquo;s time to start using Python. First, you&rsquo;ll want to get the site&rsquo;s HTML code into your Python script so that you can interact with it. For this task, you&rsquo;ll use Python&rsquo;s <a href=\"https://realpython.com/python-requests/\">Requests</a> library.</p>\n<p>Before you install any external package, you&rsquo;ll need to create a <a href=\"https://realpython.com/python-virtual-environments-a-primer/\">virtual environment</a> for your project. Activate your new virtual environment, then type the following command in your terminal to install the Requests library:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"console\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--yellow\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Shell</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">$ </span>python<span class=\"w\"> </span>-m<span class=\"w\"> </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>requests\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Then open up a new file in your favorite <a href=\"https://realpython.com/python-ides-code-editors-guide/\">text editor</a> and call it <code>scraper.py</code>. You only need a few lines of code to retrieve the HTML:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"python\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    <span class=\"mr-2\" aria-label=\"Filename\"><code style=\"color: inherit; background: inherit;\">scraper.py</code></span>\n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">requests</span>\n\n<span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://realpython.github.io/fake-jobs/&quot;</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you run this code, it issues an <a href=\"https://realpython.com/python-requests/#the-get-request\">HTTP <code>GET</code> request</a> to the given URL. It retrieves the HTML data that the server sends back and stores that data in a Python object you called <code>page</code>.</p>\n<p>If you <a href=\"https://realpython.com/python-print/\">print</a> the <code>.text</code> attribute of <code>page</code>, then you&rsquo;ll notice that it looks just like the HTML you inspected earlier with your browser&rsquo;s developer tools. You&rsquo;ve successfully fetched the static site content from the internet! You now have access to the site&rsquo;s HTML from within your Python script.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div><section class=\"section3\"><h3 id=\"static-websites\">Static Websites<a class=\"headerlink\" href=\"#static-websites\" title=\"Permanent link\"></a></h3>\n<p>The website that you&rsquo;re scraping in this tutorial serves <strong>static HTML content</strong>. In this scenario, the server that hosts the site sends back HTML documents that already contain all the data a user gets to see.</p>\n<p>When you inspected the page with developer tools earlier on, you discovered that a single job posting consists of the following long and messy-looking HTML:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"html\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--green\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">HTML</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-content&quot;</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media-left&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">figure</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;image is-48x48&quot;</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">img</span>\n            <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;https://files.realpython.com/media/real-python-logo-thumbnail.7f0db70c2ed2.jpg&quot;</span>\n            <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"s\">&quot;Real Python Logo&quot;</span>\n          <span class=\"p\">/&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">figure</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media-content&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">h2</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;title is-5&quot;</span><span class=\"p\">&gt;</span>Senior Python Developer<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">h3</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;subtitle is-6 company&quot;</span><span class=\"p\">&gt;</span>Payne, Roberts and Davis<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;content&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;location&quot;</span><span class=\"p\">&gt;</span>Stewartbury, AA<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;is-small has-text-grey&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">time</span> <span class=\"na\">datetime</span><span class=\"o\">=</span><span class=\"s\">&quot;2021-04-08&quot;</span><span class=\"p\">&gt;</span>2021-04-08<span class=\"p\">&lt;/</span><span class=\"nt\">time</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">footer</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">a</span>\n        <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://www.realpython.com&quot;</span>\n        <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n        <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span>\n        <span class=\"p\">&gt;</span>Learn<span class=\"p\">&lt;/</span><span class=\"nt\">a</span>\n      <span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">a</span>\n        <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html&quot;</span>\n        <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n        <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span>\n        <span class=\"p\">&gt;</span>Apply<span class=\"p\">&lt;/</span><span class=\"nt\">a</span>\n      <span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">footer</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>It can be challenging to wrap your head around a long block of HTML code. To make it easier to read, you can use an <a href=\"https://htmlformatter.com/\">HTML formatter</a> to clean up the HTML automatically. Good readability can help you better understand the structure of any block of code. While improved HTML formatting may or may not help, it&rsquo;s always worth a try.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> Keep in mind that every website looks different. That&rsquo;s why it&rsquo;s necessary to inspect and understand the structure of the site you&rsquo;re working with before moving forward.</p>\n</div>\n<p>The HTML you&rsquo;ll encounter will sometimes be confusing. Luckily, the HTML of this job board has descriptive <strong>class names</strong> on the elements that you&rsquo;re interested in:</p>\n<ul>\n<li><strong><code>class=\"title is-5\"</code></strong> contains the title of the job posting.</li>\n<li><strong><code>class=\"subtitle is-6 company\"</code></strong> contains the name of the company that offers the position.</li>\n<li><strong><code>class=\"location\"</code></strong> contains the location where you&rsquo;d be working.</li>\n</ul>\n<p>If you ever get lost in a large pile of HTML, remember that you can always go back to your browser and use the <a href=\"#inspect-the-site-using-developer-tools\">developer tools</a> to further explore the HTML structure interactively.</p>\n<p>By now, you&rsquo;ve successfully harnessed the power and user-friendly design of Python&rsquo;s Requests library. With only a few lines of code, you managed to scrape static HTML content from the web and make it available for further processing.</p>\n<p>While this was a breeze, you may encounter more challenging situations when working on your own web scraping projects. Before you learn how to select the relevant information from the HTML that you just scraped, you&rsquo;ll take a quick look at two more challenging situations.</p>\n</section><section class=\"section3\"><h3 id=\"login-protected-websites\">Login-Protected Websites<a class=\"headerlink\" href=\"#login-protected-websites\" title=\"Permanent link\"></a></h3>\n<p>Some pages contain information that&rsquo;s hidden behind a login. This means you&rsquo;ll need an account to be able to scrape anything from the page. Just like you need to log in on your browser when you want to access content on such a page, you&rsquo;ll also need to log in from your Python script.</p>\n<p>The Requests library comes with the built-in capacity to <a href=\"https://docs.python-requests.org/en/master/user/authentication/\">handle authentication</a>. With these techniques, you can log in to websites when making the HTTP request from your Python script and then scrape information that&rsquo;s hidden behind a login. You won&rsquo;t need to log in to access the job board information, so this tutorial won&rsquo;t cover authentication.</p>\n</section><section class=\"section3\"><h3 id=\"dynamic-websites\">Dynamic Websites<a class=\"headerlink\" href=\"#dynamic-websites\" title=\"Permanent link\"></a></h3>\n<p>Many modern websites don&rsquo;t send back static HTML content like this practice site does. If you&rsquo;re dealing with a <strong>dynamic website</strong>, then you could receive <a href=\"https://realpython.com/python-vs-javascript/\">JavaScript</a> code as a response. This code \r\n8000\r\nwill look completely different from what you see when you inspect the same page with your browser&rsquo;s developer tools.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> In this tutorial, the term <strong>dynamic website</strong> refers to a website that doesn&rsquo;t return the same HTML that you see when viewing the page in your browser.</p>\n</div>\n<p>Dynamic websites are designed to provide their functionality in collaboration with the clients&rsquo; browsers. Instead of sending HTML pages, these apps send <strong>JavaScript</strong> code that instructs your browser to <em>create</em> the desired HTML. Web apps deliver dynamic content this way to offload work from the server to the clients&rsquo; machines, as well as to avoid page reloads and improve the overall user experience.</p>\n<p>Your browser will diligently execute the JavaScript code it receives from a server and create the DOM and HTML for you locally. However, if you request a dynamic website in your Python script, then you won&rsquo;t get the HTML page content.</p>\n<p>When you use Requests, you receive only what the server sends back. In the case of a dynamic website, you&rsquo;ll end up with JavaScript code without the relevant data. The only way to go from that code to the content that you&rsquo;re interested in is to <em>execute</em> the code, just like your browser does. The Requests library can&rsquo;t do that for you, but there are other solutions that can:</p>\n<ul>\n<li>\n<p><a href=\"https://github.com/psf/requests-html\"><strong>Requests-HTML</strong></a> is a project created by the author of the Requests library that allows you to render JavaScript using syntax that&rsquo;s similar to the syntax in Requests. It also includes capabilities for parsing the data by using Beautiful Soup under the hood.</p>\n</li>\n<li>\n<p><a href=\"https://realpython.com/modern-web-automation-with-python-and-selenium/\"><strong>Selenium</strong></a> is another popular choice for scraping dynamic content. Selenium automates a full browser and can execute JavaScript, allowing you to interact with and retrieve the fully rendered HTML response for your script.</p>\n</li>\n</ul>\n<p>You won&rsquo;t go deeper into scraping dynamically-generated content in this tutorial. If you need to scrape a dynamic website, then you can look into one of the options mentioned above.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section></section><section class=\"section2\"><h2 id=\"step-3-parse-html-code-with-beautiful-soup\">Step 3: Parse HTML Code With Beautiful Soup<a class=\"headerlink\" href=\"#step-3-parse-html-code-with-beautiful-soup\" title=\"Permanent link\"></a></h2>\n<p>You&rsquo;ve successfully scraped some HTML from the internet, but when you look at it, it looks like a mess. There are tons of HTML elements here and there, thousands of attributes scattered around&mdash;and maybe there&rsquo;s some JavaScript mixed in as well? It&rsquo;s time to parse this lengthy code response with the help of Python to make it more accessible so you can pick out the data that you want.</p>\n<p><a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\">Beautiful Soup</a> is a Python library for parsing structured data. It allows you to interact with HTML in a similar way to how you interact with a web page using developer tools. The library exposes intuitive methods that you can use to explore the HTML you received.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> The name <em>Beautiful Soup</em> originates from the <a href=\"https://en.wikipedia.org/wiki/Lewis_Carroll\">Lewis Carroll</a> song <em>Beautiful Soup</em> in <a href=\"https://en.wikipedia.org/wiki/Alice%27s_Adventures_in_Wonderland\"><em>Alice&rsquo;s Adventures in Wonderland</em></a>, where a character sings about beautiful soup. This name reflects the library&rsquo;s ability to parse poorly formed HTML that&rsquo;s also known as <a href=\"https://en.wikipedia.org/wiki/Tag_soup\">tag soup</a>.</p>\n</div>\n<p>To get started, use your terminal to install Beautiful Soup into your virtual environment:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"console\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--yellow\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Shell</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">$ </span>python<span class=\"w\"> </span>-m<span class=\"w\"> </span>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>beautifulsoup4\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Then, <a href=\"https://realpython.com/python-import/\">import</a> the library in your Python script and create a <code>BeautifulSoup</code> object:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"python\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    <span class=\"mr-2\" aria-label=\"Filename\"><code style=\"color: inherit; background: inherit;\">scraper.py</code></span>\n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">requests</span>\n<span class=\"hll\"><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">bs4</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">BeautifulSoup</span>\n</span>\n<span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://realpython.github.io/fake-jobs/&quot;</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">)</span>\n\n<span class=\"hll\"><span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"s2\">&quot;html.parser&quot;</span><span class=\"p\">)</span>\n</span></code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you add the two highlighted lines of code, then you create a <code>BeautifulSoup</code> object that takes <code>page.content</code> as input, which is the HTML content that you scraped earlier.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> You&rsquo;ll want to pass <code>.content</code> instead of <code>.text</code> to avoid problems with character encoding. The <code>.content</code> attribute holds raw bytes, which <a href=\"https://docs.python.org/3/library/html.parser.html\">Python&rsquo;s built-in HTML parser</a> can decode better than the text representation you printed earlier using the <code>.text</code> attribute.</p>\n</div>\n<p>The second argument that you pass to the <a href=\"https://realpython.com/python-class-constructor/\">class constructor</a>, <code>\"html.parser\"</code>, makes sure that you use <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#differences-between-parsers\">an appropriate parser</a> for HTML content.</p>\n<p>At this point, you&rsquo;re set up with a <code>BeautifulSoup</code> object that you named <code>soup</code>. You can now run your script using Python&rsquo;s interactive mode:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"console\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--yellow\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Shell</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp gp-VirtualEnv\">(venv)</span> <span class=\"gp\">$ </span>python<span class=\"w\"> </span>-i<span class=\"w\"> </span>scraper.py\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you use the <a href=\"https://docs.python.org/3/using/cmdline.html#cmdoption-i\">command-option <code>-i</code></a> to run a script, then Python executes the code and drops you into a <a href=\"https://realpython.com/python-repl/\">REPL environment</a>. This can be a good way to continue exploring the scraped HTML through the user-friendly lens of Beautiful Soup.</p>\n<section class=\"section3\"><h3 id=\"find-elements-by-id\">Find Elements by ID<a class=\"headerlink\" href=\"#find-elements-by-id\" title=\"Permanent link\"></a></h3>\n<p>In an HTML web page, every element can have an <code>id</code> attribute assigned. As the name already suggests, that <code>id</code> attribute makes the element uniquely identifiable on the page. You can begin to parse your page by selecting a specific element by its ID.</p>\n<p>Switch back to developer tools and identify the HTML object that contains all the job postings. Explore by hovering over parts of the page and using right-click to <em>Inspect</em>.</p>\n<div class=\"alert alert-primary\" role=\"alert\">\n<p><strong>Note:</strong> It helps to periodically switch back to your browser and explore the page interactively using developer tools. You&rsquo;ll get a better idea of where and how to find the exact elements that you&rsquo;re looking for.</p>\n</div>\n<p>In this case, the element that you&rsquo;re looking for is a <code>&lt;div&gt;</code> with an <code>id</code> attribute that has the value <code>\"ResultsContainer\"</code>. It has some other attributes as well, but below is the gist of what you&rsquo;re looking for:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"html\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--green\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">HTML</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">id</span><span class=\"o\">=</span><span class=\"s\">&quot;ResultsContainer&quot;</span><span class=\"p\">&gt;</span>\n  <span class=\"cm\">&lt;!-- All the job listings --&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Beautiful Soup allows you to find that specific HTML element by its ID:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;ResultsContainer&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>For easier viewing, you can prettify any <code>BeautifulSoup</code> object when you print it out. If you call <code>.prettify()</code> on the <code>results</code> variable that you assigned above, then you&rsquo;ll see all the HTML contained within the <code>&lt;div&gt;</code> neatly structured:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">prettify</span><span class=\"p\">())</span>\n<span class=\"go\">&lt;div class=&quot;columns is-multiline&quot; id=&quot;ResultsContainer&quot;&gt;</span>\n<span class=\"go\"> &lt;div class=&quot;column is-half&quot;&gt;</span>\n<span class=\"go\">&lt;!- ... -&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you find an element by its ID, you can pick out one specific element from among the rest of the HTML, no matter how large the source code of the website is. Now you can focus on working with only this part of the page&rsquo;s HTML. It looks like your soup just got a little thinner! Nevertheless, it&rsquo;s still quite dense.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section3\"><h3 id=\"find-elements-by-html-class-name\">Find Elements by HTML Class Name<a class=\"headerlink\" href=\"#find-elements-by-html-class-name\" title=\"Permanent link\"></a></h3>\n<p>You&rsquo;ve seen that every job posting is wrapped in a <code>&lt;div&gt;</code> element with the class <code>card-content</code>. Now you can work with your new object called <code>results</code> and select only the job postings in it. These are, after all, the parts of the HTML that you&rsquo;re interested in! You can pick out all job cards in a single line of code:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">job_cards</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;div&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;card-content&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Here, you call <code>.find_all()</code> on <code>results</code>, which is a <code>BeautifulSoup</code> object. It returns an <a href=\"https://docs.python.org/3/glossary.html#term-iterable\">iterable</a> containing all the HTML for all the job listings displayed on that page.</p>\n<p>Take a look at all of them:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>   <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">job_card</span><span class=\"p\">,</span> <span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s2\">&quot;</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span> <span class=\"o\">*</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">&lt;div class=&quot;card-content&quot;&gt;</span>\n<span class=\"go\">&lt;div class=&quot;media&quot;&gt;</span>\n<span class=\"go\">&lt;div class=&quot;media-left&quot;&gt;</span>\n<span class=\"go\">&lt;figure class=&quot;image is-48x48&quot;&gt;</span>\n<span class=\"go\">&lt;img alt=&quot;Real Python Logo&quot; src=&quot;https://files.realpython.com/media/real-python-logo-thumbnail.7f0db70c2ed2.jpg?__no_cf_polish=1&quot;/&gt;</span>\n<span class=\"go\">&lt;/figure&gt;</span>\n<span class=\"go\">&lt;/div&gt;</span>\n<span class=\"go\">&lt;div class=&quot;media-content&quot;&gt;</span>\n<span class=\"go\">&lt;h2 class=&quot;title is-5&quot;&gt;Senior Python Developer&lt;/h2&gt;</span>\n<span class=\"go\">&lt;h3 class=&quot;subtitle is-6 company&quot;&gt;Payne, Roberts and Davis&lt;/h3&gt;</span>\n<span class=\"go\">&lt;/div&gt;</span>\n<span class=\"go\">&lt;/div&gt;</span>\n<span class=\"go\">&lt;div class=&quot;content&quot;&gt;</span>\n<span class=\"go\">&lt;p class=&quot;location&quot;&gt;</span>\n<span class=\"go\">        Stewartbury, AA</span>\n<span class=\"go\">      &lt;/p&gt;</span>\n<span class=\"go\">&lt;p class=&quot;is-small has-text-grey&quot;&gt;</span>\n<span class=\"go\">&lt;time datetime=&quot;2021-04-08&quot;&gt;2021-04-08&lt;/time&gt;</span>\n<span class=\"go\">&lt;/p&gt;</span>\n<span class=\"go\">&lt;/div&gt;</span>\n<span class=\"go\">&lt;footer class=&quot;card-footer&quot;&gt;</span>\n<span class=\"go\">&lt;a class=&quot;card-footer-item&quot; href=&quot;https://www.realpython.com&quot; target=&quot;_blank&quot;&gt;Learn&lt;/a&gt;</span>\n<span class=\"go\">&lt;a class=&quot;card-footer-item&quot; href=&quot;https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html&quot; target=&quot;_blank&quot;&gt;Apply&lt;/a&gt;</span>\n<span class=\"go\">&lt;/footer&gt;</span>\n<span class=\"go\">&lt;/div&gt;</span>\n\n<span class=\"go\">&lt;!-- ... --&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>That&rsquo;s pretty neat already, but there&rsquo;s still a lot of HTML! You saw earlier that your page has descriptive class names on some elements. You can pick out those child elements from each job posting with <code>.find()</code>:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">job_cards</span><span class=\"p\">:</span>\n<span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">)</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n</span><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">&lt;h2 class=&quot;title is-5&quot;&gt;Senior Python Developer&lt;/h2&gt;</span>\n<span class=\"go\">&lt;h3 class=&quot;subtitle is-6 company&quot;&gt;Payne, Roberts and Davis&lt;/h3&gt;</span>\n<span class=\"go\">&lt;p class=&quot;location&quot;&gt;</span>\n<span class=\"go\">        Stewartbury, AA</span>\n<span class=\"go\">      &lt;/p&gt;</span>\n\n<span class=\"go\">&lt;!-- ... --&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Each <code>job_card</code> is another <code>BeautifulSoup()</code> object. Therefore, you can use the same methods on it as you did on its parent element, <code>results</code>.</p>\n<p>With this code snippet, you&rsquo;re getting closer and closer to the data that you&rsquo;re actually interested in. Still, there&rsquo;s a lot going on with all those HTML tags and attributes floating around:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"html\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--green\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">HTML</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">h2</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;title is-5&quot;</span><span class=\"p\">&gt;</span>Senior Python Developer<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">h3</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;subtitle is-6 company&quot;</span><span class=\"p\">&gt;</span>Payne, Roberts and Davis<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;location&quot;</span><span class=\"p\">&gt;</span>Stewartbury, AA<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Next, you&rsquo;ll learn how to narrow down this output to access only the text content that you&rsquo;re interested in.</p>\n</section><section class=\"section3\"><h3 id=\"extract-text-from-html-elements\">Extract Text From HTML Elements<a class=\"headerlink\" href=\"#extract-text-from-html-elements\" title=\"Permanent link\"></a></h3>\n<p>You only want to see the title, company, and location of each job posting. And behold! Beautiful Soup has got you covered. You can add <code>.text</code> to a <code>BeautifulSoup</code> object to return only the <strong>text content</strong> of the HTML elements that the object contains:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;titl\r\n6e4\r\ne&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n<span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</span><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Senior Python Developer</span>\n<span class=\"go\">Payne, Roberts and Davis</span>\n\n<span class=\"go\">        Stewartbury, AA</span>\n\n<span class=\"go\"># \r\n7ff9\r\n...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Run the above code snippet, and you&rsquo;ll see the text of each element displayed. However, you&rsquo;ll also get some extra <strong>whitespace</strong>. But no worries, because you&rsquo;re working with <a href=\"https://realpython.com/python-strings/\">Python strings</a> so you can <code>.strip()</code> the superfluous whitespace. You can also apply any other familiar Python string methods to further clean up your text:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n<span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n</span><span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n</span><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Senior Python Developer</span>\n<span class=\"go\">Payne, Roberts and Davis</span>\n<span class=\"go\">Stewartbury, AA</span>\n\n<span class=\"go\">Energy engineer</span>\n<span class=\"go\">Vasquez-Davidson</span>\n<span class=\"go\">Christopherville, AA</span>\n\n<span class=\"go\">Legal executive</span>\n<span class=\"go\">Jackson, Chambers and Levy</span>\n<span class=\"go\">Port Ericaburgh, AA</span>\n\n<span class=\"go\"># ...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>The results finally look much better! You&rsquo;ve now got a readable list of jobs, associated company names, and each job&rsquo;s location. However, you&rsquo;re specifically looking for a position as a <em>software developer</em>, and these results contain job postings in many other fields as well.</p>\n</section><section class=\"section3\"><h3 id=\"find-elements-by-class-name-and-text-content\">Find Elements by Class Name and Text Content<a class=\"headerlink\" href=\"#find-elements-by-class-name-and-text-content\" title=\"Permanent link\"></a></h3>\n<p>Not all of the job listings are developer jobs. Instead of printing out <em>all</em> the jobs listed on the website, you&rsquo;ll first <strong>filter</strong> them using keywords.</p>\n<p>You know that job titles in the page are kept within <code>&lt;h2&gt;</code> elements. To filter for only specific jobs, you can use the <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#the-string-argument\"><code>string</code> argument</a>:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">python_jobs</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"s2\">&quot;Python&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>This code finds all <code>&lt;h2&gt;</code> elements where the contained string matches <code>\"Python\"</code> exactly. Note that you&rsquo;re directly calling the method on your first <code>results</code> variable. If you go ahead and <code>print()</code> the output of the above code snippet to your console, then you might be disappointed because it&rsquo;ll be empty:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">python_jobs</span><span class=\"p\">)</span>\n<span class=\"go\">[]</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>There <em>was</em> a Python job in the search results, so why isn&rsquo;t it showing up?</p>\n<p>When you use <code>string</code> as you did above, your program looks for that string <em>exactly</em>. Any variations in the spelling, capitalization, or whitespace will prevent the element from matching. In the next section, you&rsquo;ll find a way to make your search string more general.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section3\"><h3 id=\"pass-a-function-to-a-beautiful-soup-method\">Pass a Function to a Beautiful Soup Method<a class=\"headerlink\" href=\"#pass-a-function-to-a-beautiful-soup-method\" title=\"Permanent link\"></a></h3>\n<p>In addition to strings, you can sometimes pass functions as arguments to Beautiful Soup methods. You can change the previous line of code to use a function instead:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">python_jobs</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"s2\">&quot;python&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Now you&rsquo;re passing an <strong>anonymous function</strong> to the <code>string</code> argument. The <a href=\"https://realpython.com/python-lambda/\">lambda function</a> looks at the text of each <code>&lt;h2&gt;</code> element, converts it to lowercase, and checks whether the <a href=\"https://realpython.com/python-string-contains-substring/\">substring</a> <code>\"python\"</code> is found anywhere. You can check whether you managed to identify all the Python jobs with this approach:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">python_jobs</span><span class=\"p\">))</span>\n<span class=\"go\">10</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Your program has found ten matching job posts that include the word <code>\"python\"</code> in their job title!</p>\n<p>Finding elements based on their text content is a powerful way to filter your HTML response for specific information. Beautiful Soup allows you to use exact strings or functions as arguments for filtering text in <code>BeautifulSoup</code> objects.</p>\n<p>However, when you try to print the information of the filtered Python jobs like you&rsquo;ve done before, you run into an error:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"hll\"><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_jobs</span><span class=\"p\">:</span>\n</span><span class=\"gp\">... </span>    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">&quot;&lt;stdin&gt;&quot;</span>, line <span class=\"m\">5</span>, in <span class=\"n\">&lt;module&gt;</span>\n<span class=\"gr\">AttributeError</span>: <span class=\"n\">&#39;NoneType&#39; object has no attribute &#39;text&#39;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>This <a href=\"https://realpython.com/python-traceback/\">traceback message</a> is a common error that you&rsquo;ll run into a lot when you&rsquo;re scraping information from the internet. Inspect the HTML of an element in your <code>python_jobs</code> list. What does it look like? Where do you think the error is coming from?</p>\n</section><section class=\"section3\"><h3 id=\"identify-error-conditions\">Identify Error Conditions<a class=\"headerlink\" href=\"#identify-error-conditions\" title=\"Permanent link\"></a></h3>\n<p>When you look at a single element in <code>python_jobs</code>, you&rsquo;ll see that it consists of only the <code>&lt;h2&gt;</code> element that contains the job title:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">python_jobs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;h2 class=&quot;title is-5&quot;&gt;Senior Python Developer&lt;/h2&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you revisit the code you used to select the items, you&rsquo;ll notice that&rsquo;s what you targeted. You filtered for only the <code>&lt;h2&gt;</code> title elements of the job postings that contain the word <code>\"python\"</code>. As you can see, these elements don&rsquo;t include the rest of the information about the job.</p>\n<p>The error message you received earlier was related to this:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pytb\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python Traceback</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"x\">AttributeError: &#39;NoneType&#39; object has no attribute &#39;text&#39;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>You tried to find the job title, the company name, and the job&rsquo;s location in each element in <code>python_jobs</code>, but each element contains only the job title text.</p>\n<p>Your diligent parsing library still looks for the other ones, too, and returns <a href=\"https://realpython.com/null-in-python/\"><code>None</code></a> because it can&rsquo;t find them. Then, <code>print()</code> fails with the shown error message when you try to extract the <code>.text</code> attribute from one of these <code>None</code> objects.</p>\n<p>The text you&rsquo;re looking for is nested in sibling elements of the <code>&lt;h2&gt;</code> elements that your filter returns. Beautiful Soup can help you select sibling, child, and parent elements of each <code>BeautifulSoup</code> object.</p>\n</section><section class=\"section3\"><h3 id=\"access-parent-elements\">Access Parent Elements<a class=\"headerlink\" href=\"#access-parent-elements\" title=\"Permanent link\"></a></h3>\n<p>One way to get access to all the information for a job is to step up in the hierarchy of the DOM starting from the <code>&lt;h2&gt;</code> elements that you identified. Take another look at the HTML of a single job posting, for example, <a href=\"#inspect-the-site-using-developer-tools\">using your developer tools</a>. Then, find the <code>&lt;h2&gt;</code> element that contains the job title and its closest parent element that contains the information you&rsquo;re interested in:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"html\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--green\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">HTML</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"hll\">  <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-content&quot;</span><span class=\"p\">&gt;</span>\n</span>    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media-left&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">figure</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;image is-48x48&quot;</span><span class=\"p\">&gt;</span>\n          <span class=\"p\">&lt;</span><span class=\"nt\">img</span>\n            <span class=\"na\">src</span><span class=\"o\">=</span><span class=\"s\">&quot;https://files.realpython.com/media/real-python-logo-thumbnail.7f0db70c2ed2.jpg&quot;</span>\n            <span class=\"na\">alt</span><span class=\"o\">=</span><span class=\"s\">&quot;Real Python Logo&quot;</span>\n          <span class=\"p\">/&gt;</span>\n        <span class=\"p\">&lt;/</span><span class=\"nt\">figure</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;media-content&quot;</span><span class=\"p\">&gt;</span>\n<span class=\"hll\">        <span class=\"p\">&lt;</span><span class=\"nt\">h2</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;title is-5&quot;</span><span class=\"p\">&gt;</span>Senior Python Developer<span class=\"p\">&lt;/</span><span class=\"nt\">h2</span><span class=\"p\">&gt;</span>\n</span>        <span class=\"p\">&lt;</span><span class=\"nt\">h3</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;subtitle is-6 company&quot;</span><span class=\"p\">&gt;</span>Payne, Roberts and Davis<span class=\"p\">&lt;/</span><span class=\"nt\">h3</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n\n    <span class=\"p\">&lt;</span><span class=\"nt\">div</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;content&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;location&quot;</span><span class=\"p\">&gt;</span>Stewartbury, AA<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;is-small has-text-grey&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">time</span> <span class=\"na\">datetime</span><span class=\"o\">=</span><span class=\"s\">&quot;2021-04-08&quot;</span><span class=\"p\">&gt;</span>2021-04-08<span class=\"p\">&lt;/</span><span class=\"nt\">time</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">footer</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer&quot;</span><span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">a</span>\n        <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://www.realpython.com&quot;</span>\n        <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n        <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span>\n        <span class=\"p\">&gt;</span>Learn<span class=\"p\">&lt;/</span><span class=\"nt\">a</span>\n      <span class=\"p\">&gt;</span>\n      <span class=\"p\">&lt;</span><span class=\"nt\">a</span>\n        <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html&quot;</span>\n        <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n        <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span>\n        <span class=\"p\">&gt;</span>Apply<span class=\"p\">&lt;/</span><span class=\"nt\">a</span>\n      <span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">footer</span><span class=\"p\">&gt;</span>\n<span class=\"hll\">  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</span><span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>The <code>&lt;div&gt;</code> element with the <code>card-content</code> class contains all the information you want. It&rsquo;s a third-level parent of the <code>&lt;h2&gt;</code> title element that you found using your filter.</p>\n<p>With this information in mind, you can now use the elements in <code>python_jobs</code> and fetch their great-grandparent elements to get access to all the information you want:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">python_jobs</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span>\n<span class=\"gp\">... </span>    <span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"s2\">&quot;python&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"gp\">... </span><span class=\"p\">)</span>\n\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">python_job_cards</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n<span class=\"gp\">... </span>    <span class=\"n\">h2_element</span><span class=\"o\">.</span><span class=\"n\">parent</span>\r\n8000\r\n<span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"k\">for</span> <span class=\"n\">h2_element</span> <span class=\"ow\">in</span> <span class=\"n\">python_jobs</span>\n<span class=\"gp\">... </span><span class=\"p\">]</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>You added a <a href=\"https://realpython.com/list-comprehension-python/\">list comprehension</a> that operates on each of the <code>&lt;h2&gt;</code> title elements in <code>python_jobs</code> that you got by filtering with the lambda expression. You&rsquo;re selecting the parent element of the parent element of the parent element of each <code>&lt;h2&gt;</code> title element. That&rsquo;s three generations up!</p>\n<p>When you were looking at the HTML of a single job posting, you identified that this specific parent element with the class name <code>card-content</code> contains all the information you need.</p>\n<p>Now you can adapt the code in your <a href=\"https://realpython.com/python-for-loop/\"><code>for</code> loop</a> to iterate over the parent elements instead:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">()</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Senior Python Developer</span>\n<span class=\"go\">Payne, Roberts and Davis</span>\n<span class=\"go\">Stewartbury, AA</span>\n\n<span class=\"go\">Software Engineer (Python)</span>\n<span class=\"go\">Garcia PLC</span>\n<span class=\"go\">Ericberg, AE</span>\n\n<span class=\"go\"># ...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>When you run your script another time, you&rsquo;ll see that your code once again has access to all the relevant information. That&rsquo;s because you&rsquo;re now looping over the <code>&lt;div class=\"card-content\"&gt;</code> elements instead of just the <code>&lt;h2&gt;</code> title elements.</p>\n<p>Using the <code>.parent</code> attribute that each <code>BeautifulSoup</code> object comes with gives you an intuitive way to step through your DOM structure and address the elements you need. You can also access child elements and sibling elements in a similar manner. Read up on <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#navigating-the-tree\">navigating the tree</a> for more information.</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section3\"><h3 id=\"extract-attributes-from-html-elements\">Extract Attributes From HTML Elements<a class=\"headerlink\" href=\"#extract-attributes-from-html-elements\" title=\"Permanent link\"></a></h3>\n<p>At this point, you&rsquo;ve already written code that scrapes the site and filters its HTML for relevant job postings. Well done! However, what&rsquo;s still missing is fetching the link to apply for a job.</p>\n<p>While inspecting the page, you found two links at the bottom of each card. If you use <code>.text</code> on the link elements in the same way you did for the other elements, then you won&rsquo;t get the URLs that you&rsquo;re interested in:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">links</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">link</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Learn</span>\n<span class=\"go\">Apply</span>\n<span class=\"go\"># ...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>If you execute the code shown above, then you&rsquo;ll get the link text for <code>Learn</code> and <code>Apply</code> instead of the associated URLs.</p>\n<p>That&rsquo;s because the <code>.text</code> attribute leaves only the visible content of an HTML element. It strips away all HTML tags, including the HTML attributes containing the URL, and leaves you with just the link text. To get the URL instead, you need to extract the value of one of the HTML attributes instead of discarding it.</p>\n<p>The URL of a link element is associated with the <code>href</code> HTML attribute. The specific URL that you&rsquo;re looking for is the value of the <code>href</code> attribute of the second <code>&lt;a&gt;</code> tag at the bottom of the HTML for a single job posting:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"html\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--green\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">HTML</span>\n    \n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code>    <span class=\"cm\">&lt;!-- ... --&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">footer</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer&quot;</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://www.realpython.com&quot;</span> <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n           <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span><span class=\"p\">&gt;</span>Learn<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n<span class=\"hll\">        <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">&quot;https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html&quot;</span>\n</span>           <span class=\"na\">target</span><span class=\"o\">=</span><span class=\"s\">&quot;_blank&quot;</span>\n           <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">&quot;card-footer-item&quot;</span><span class=\"p\">&gt;</span>Apply<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">footer</span><span class=\"p\">&gt;</span>\n  <span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">div</span><span class=\"p\">&gt;</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>Start by fetching all the <code>&lt;a&gt;</code> elements in a job card. Then, extract the value of their <code>href</code> attributes using square-bracket notation:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_job_cards</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">links</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">... </span>    <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">links</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>        <span class=\"n\">link_url</span> <span class=\"o\">=</span> <span class=\"n\">link</span><span class=\"p\">[</span><span class=\"s2\">&quot;href&quot;</span><span class=\"p\">]</span>\n<span class=\"hll\"><span class=\"gp\">... </span>        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Apply here: </span><span class=\"si\">{</span><span class=\"n\">link_url</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</span><span class=\"gp\">...</span>\n<span class=\"go\">Apply here: https://www.realpython.com</span>\n\n<span class=\"go\">Apply here: https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html</span>\n\n<span class=\"go\"># ...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>In this code snippet, you first fetch all the links from each of the filtered job postings. Then, you extract the <code>href</code> attribute, which contains the URL, using <code>[\"href\"]</code> and print it to your console.</p>\n<p>Each job card has two links associated with it. However, you&rsquo;re only looking for the <em>second</em> link, so you&rsquo;ll apply a small edit to the code:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"pycon\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_job_cards</span><span class=\"p\">:</span>\n<span class=\"hll\"><span class=\"gp\">... </span>    <span class=\"n\">link_url</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s2\">&quot;href&quot;</span><span class=\"p\">]</span>\n</span><span class=\"gp\">... </span>    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Apply here: </span><span class=\"si\">{</span><span class=\"n\">link_url</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n<span class=\"gp\">...</span>\n<span class=\"go\">Apply here: https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html</span>\n\n<span class=\"go\"># ...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>In the updated code snippet, you use <a href=\"https://realpython.com/python-list/#accessing-items-in-a-list-indexing\">indexing</a> to pick the second link element from the results of <code>.find_all()</code> using its index (<code>[1]</code>). Then, you directly extract the URL using the square-bracket notation with the <code>\"href\"</code> key, thereby fetching the value of the <code>href</code> attribute.</p>\n<p>You can use the same square-bracket notation to <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#bs4.Tag.attrs\">extract other HTML attributes</a> as well.</p>\n</section></section><section class=\"section2\"><h2 id=\"assemble-your-code-in-a-script\">Assemble Your Code in a Script<a class=\"headerlink\" href=\"#assemble-your-code-in-a-script\" title=\"Permanent link\"></a></h2>\n<p>You&rsquo;re now happy with the results and are ready to put it all together into your <code>scraper.py</code> script. When you assemble the useful lines of code that you wrote during your exploration, you&rsquo;ll end up with a Python web scraping script that extracts the job title, company, location, and application link from the scraped website:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"python\" >\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--blue\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Python</span>\n    <span class=\"mr-2\" aria-label=\"Filename\"><code style=\"color: inherit; background: inherit;\">scraper.py</code></span>\n    <div class=\"noselect\">\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"kn\">import</span><span class=\"w\"> </span><span class=\"nn\">requests</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">bs4</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">BeautifulSoup</span>\n\n<span class=\"n\">URL</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;https://realpython.github.io/fake-jobs/&quot;</span>\n<span class=\"n\">page</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">URL</span><span class=\"p\">)</span>\n\n<span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"n\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"s2\">&quot;html.parser&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s2\">&quot;ResultsContainer&quot;</span><span class=\"p\">)</span>\n\n<span class=\"n\">python_jobs</span> <span class=\"o\">=</span> <span class=\"n\">results</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">string</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"s2\">&quot;python&quot;</span> <span class=\"ow\">in</span> <span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">lower</span><span class=\"p\">()</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">python_job_cards</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">h2_element</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span><span class=\"o\">.</span><span class=\"n\">parent</span> <span class=\"k\">for</span> <span class=\"n\">h2_element</span> <span class=\"ow\">in</span> <span class=\"n\">python_jobs</span>\n<span class=\"p\">]</span>\n\n<span class=\"k\">for</span> <span class=\"n\">job_card</span> <span class=\"ow\">in</span> <span class=\"n\">python_job_cards</span><span class=\"p\">:</span>\n    <span class=\"n\">title_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h2&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;title&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">company_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;h3&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;company&quot;</span><span class=\"p\">)</span>\n    <span class=\"n\">location_element</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"s2\">&quot;p&quot;</span><span class=\"p\">,</span> <span class=\"n\">class_</span><span class=\"o\">=</span><span class=\"s2\">&quot;location&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">title_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">company_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">location_element</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">())</span>\n    <span class=\"n\">link_url</span> <span class=\"o\">=</span> <span class=\"n\">job_card</span><span class=\"o\">.</span><span class=\"n\">find_all</span><span class=\"p\">(</span><span class=\"s2\">&quot;a&quot;</span><span class=\"p\">)[</span><span class=\"mi\">1</span><span class=\"p\">][</span><span class=\"s2\">&quot;href&quot;</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Apply here: </span><span class=\"si\">{</span><span class=\"n\">link_url</span><span class=\"si\">}</span><span class=\"se\">\\n</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>You could continue to work on your script and <a href=\"https://realpython.com/python-refactoring/\">refactor</a> it, but at this point, it does the job you wanted and presents you with the information you need when you want to apply for a Python developer job:</p>\n<div class=\"codeblock mb-3 w-100\" aria-label=\"Code block\" data-syntax-language=\"console\" data-is-repl=\"true\">\n  <div class=\"codeblock__header d-flex justify-content-between codeblock--yellow\">\n    <span class=\"mr-2 noselect\" aria-label=\"Language\">Shell</span>\n    \n    <div class=\"noselect\">\n      \n        <span class=\"codeblock__output-toggle\" title=\"Toggle prompts and output\" role=\"button\"><span class=\"icon baseline js-codeblock-output-on codeblock__header--icon-lower\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#regular--rectangle-terminal\"/></svg></span></span>\n      \n    </div>\n  </div>\n  <div style=\"position: relative;\">\n    <div class=\"highlight highlight--with-header\"><pre><span></span><code><span class=\"gp gp-VirtualEnv\">(venv)</span> <span class=\"gp\">$ </span>python<span class=\"w\"> </span>scraper.py\n<span class=\"go\">Senior Python Developer</span>\n<span class=\"go\">Payne, Roberts and Davis</span>\n<span class=\"go\">Stewartbury, AA</span>\n<span class=\"go\">Apply here: https://realpython.github.io/fake-jobs/jobs/senior-python-developer-0.html</span>\n\n<span class=\"go\">...</span>\n</code></pre></div>\n    \n    <button class=\"codeblock__copy btn btn-outline-secondary border m-1 px-1 d-hover-only\" title=\"Copy to clipboard\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@copy\"/></svg></span></button>\n    <template class=\"codeblock__copied-template\">\n      <span class=\"small\"><span class=\"icon baseline mr-1 text-success\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@check\"/></svg></span>Copied!</span>\n    </template>\n    \n  </div>\n</div>\n<p>All you need to do now to check for new Python jobs on the job board is run your Python script. This leaves you with plenty of time to get out there and catch some waves!</p>\n<div><div class=\"rounded border border-light\" style=\"display:block;position:relative;\"> <div style=\"display:block;width:100%;padding-top:12.5%;\"></div> <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"> </div></div><a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"> <span aria-hidden=\"true\" class=\"icon baseline mr-1\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"></use></svg></span>Remove ads</a></div></section><section class=\"section2\"><h2 id=\"keep-practicing\">Keep Practicing<a class=\"headerlink\" href=\"#keep-practicing\" title=\"Permanent link\"></a></h2>\n<p>If you&rsquo;ve written the code alongside this tutorial, then you can run your script as is to see the fake job information pop up in your terminal. Your next step is to tackle a <strong>real-life job board</strong>! To keep practicing your new skills, you can revisit the web scraping process described in this tutorial by using any or all of the following sites:</p>\n<ul>\n<li><a href=\"https://www.python.org/jobs/\">Python.org Job Board</a></li>\n<li><a href=\"https://pythonjobs.github.io/\">PythonJobs</a></li>\n<li><a href=\"https://remote.co/remote-jobs/developer/\">Remote</a></li>\n</ul>\n<p>The linked websites return their search results as static HTML responses, similar to the Fake Python job board. Therefore, you can scrape them using only Requests and Beautiful Soup.</p>\n<p>Start going through this tutorial again from the beginning using one of these other sites. You&rsquo;ll see that each website&rsquo;s structure is different and that you&rsquo;ll need to rebuild the code in a slightly different way to fetch the data you want. Tackling this challenge is a great way to practice the concepts that you just learned. While it might make you sweat every so often, your coding skills will be stronger in the end!</p>\n<p>During your second attempt, you can also explore additional features of Beautiful Soup. Use the <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/\">documentation</a> as your guidebook and inspiration. Extra practice will help you become more proficient at web scraping with Python, Requests, and Beautiful Soup.</p>\n<p>To wrap up your journey, you could then give your code a final makeover and create a <strong>command-line interface (CLI)</strong> app that scrapes one of the job boards and filters the results by a keyword that you can input on each execution. Your CLI tool could allow you to search for specific types of jobs, or jobs in particular locations.</p>\n<p>If you&rsquo;re interested in learning how to adapt your script as a command-line interface, then check out the <a href=\"https://realpython.com/command-line-interfaces-python-argparse/\">Build Command-Line Interfaces With Python&rsquo;s argparse</a> tutorial.</p>\n</section><section class=\"section2\"><h2 id=\"conclusion\">Conclusion<a class=\"headerlink\" href=\"#conclusion\" title=\"Permanent link\"></a></h2>\n<p>The Requests library provides a user-friendly way to scrape static HTML from the internet with Python. You can then parse the HTML with another package called Beautiful Soup. You&rsquo;ll find that Beautiful Soup will cater to most of your parsing needs, including <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#navigating-the-tree\">navigation</a> and <a href=\"https://www.crummy.com/software/BeautifulSoup/bs4/doc/#searching-the-tree\">advanced searching</a>. Both packages will be trusted and helpful companions on your web scraping adventures. </p>\n<p><strong>In this tutorial, you&rsquo;ve learned how to:</strong></p>\n<ul>\n<li>Step through a <strong>web scraping pipeline</strong> from start to finish</li>\n<li>Inspect the <strong>HTML structure</strong> of your target site with your browser&rsquo;s <strong>developer tools</strong></li>\n<li>Decipher the data encoded in <strong>URLs</strong></li>\n<li>Download the page&rsquo;s <strong>HTML content</strong> using Python&rsquo;s <strong>Requests</strong> library</li>\n<li><strong>Parse</strong> the downloaded HTML with <strong>Beautiful Soup</strong> to extract relevant information</li>\n<li><strong>Build a script</strong> that fetches job offers from the web and displays relevant information in your console</li>\n</ul>\n<p>With this broad pipeline in mind and two powerful libraries in your toolkit, you can go out and see what other websites you can scrape. Have fun, and always remember to be respectful and use your programming skills responsibly. Happy scraping! </p>\n<div class=\"alert alert-warning\" role=\"alert\">\n<p><strong markdown=\"1\">Get Your Code:</strong> <a href=\"https://realpython.com/bonus/beautiful-soup-web-scraper-python-code/\" class=\"alert-link\" data-toggle=\"modal\" data-target=\"#modal-beautiful-soup-web-scraper-python-code\" data-focus=\"false\" markdown=\"1\">Click here to download the free sample code </a> that you&rsquo;ll use to learn about web scraping in Python.</p>\n</div>\n</s\r\n122d\r\nection><section class=\"section2\"><h2 id=\"frequently-asked-questions\">Frequently Asked Questions<a class=\"headerlink\" href=\"#frequently-asked-questions\" title=\"Permanent link\"></a></h2>\n<p>Now that you have some experience with Beautiful Soup and web scraping in Python, you can use the questions and answers below to check your understanding and recap what you&rsquo;ve learned.</p>\n<p>These FAQs are related to the most important concepts you&rsquo;ve covered in this tutorial. Click the <em>Show/Hide</em> toggle beside each question to reveal the answer:</p>\n<div class=\"card mb-3\" id=\"collapse_cardd7c942\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapsed7c942\" aria-expanded=\"false\" aria-controls=\"collapsed7c942\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\"><strong>What is web scraping and why is it useful?</strong></span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_cardd7c942\" id=\"collapsed7c942\">\n<div class=\"card-body\">\n<p>Web scraping is the automated process of extracting data from websites. It&rsquo;s useful because it allows you to gather large amounts of data efficiently and systematically, which can be beneficial for research, data analysis, or keeping track of updates on specific sites, such as job postings.</p>\n</div>\n</div>\n</div>\n<div class=\"card mb-3\" id=\"collapse_card58d527\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapse58d527\" aria-expanded=\"false\" aria-controls=\"collapse58d527\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\"><strong>How do you inspect the HTML structure of a website before scraping?</strong></span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_card58d527\" id=\"collapse58d527\">\n<div class=\"card-body\">\n<p>You can use your browser&rsquo;s developer tools to inspect the HTML structure of a website. To do this, right-click on any element of the page and select <em>Inspect</em>. This will allow you to view the underlying HTML code, helping you understand how the data you want is structured.</p>\n</div>\n</div>\n</div>\n<div class=\"card mb-3\" id=\"collapse_card8756ae\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapse8756ae\" aria-expanded=\"false\" aria-controls=\"collapse8756ae\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\"><strong>What role does the Requests library play in web scraping with Python?</strong></span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_card8756ae\" id=\"collapse8756ae\">\n<div class=\"card-body\">\n<p>The Requests library is used to send HTTP requests to a website and retrieve the HTML content of the web page. You&rsquo;ll need to get the raw HTML before you can parse and process it with Beautiful Soup.</p>\n</div>\n</div>\n</div>\n<div class=\"card mb-3\" id=\"collapse_cardda7349\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapseda7349\" aria-expanded=\"false\" aria-controls=\"collapseda7349\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\"><strong>How does Beautiful Soup help in web scraping?</strong></span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_cardda7349\" id=\"collapseda7349\">\n<div class=\"card-body\">\n<p>Beautiful Soup is a Python library used for parsing HTML and XML documents. It provides Pythonic idioms for iterating, searching, and modifying the parse tree, making it easier to extract the necessary data from the HTML content you scraped from the internet.</p>\n</div>\n</div>\n</div>\n<div class=\"card mb-3\" id=\"collapse_card8a4783\">\n<div class=\"card-header border-0\">\n<p class=\"m-0\">\n    <button class=\"btn w-100\" data-toggle=\"collapse\" data-target=\"#collapse8a4783\" aria-expanded=\"false\" aria-controls=\"collapse8a4783\" markdown=\"1\"><span class=\"float-left\" markdown=\"1\"><strong>What are some challenges you might face when scraping websites?</strong></span><span class=\"float-right text-muted\">Show/Hide</span></button>\n  </p>\n</div>\n<div class=\"collapse js-collapsible-section\" data-parent=\"#collapse_card8a4783\" id=\"collapse8a4783\">\n<div class=\"card-body\">\n<p>Some challenges include handling dynamic content generated by JavaScript, \r\n7ffa\r\naccessing login-protected pages, dealing with changes in website structure that could break your scraper, and navigating legal issues related to the terms of service of the websites you&rsquo;re scraping. It&rsquo;s important to approach this work responsibly and ethically.</p>\n</div>\n</div>\n</div>\n<div class=\"container border rounded text-wrap-pretty my-3\">\n\n  <p class=\"my-3\"><mark class=\"marker-highlight\"><strong><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@quiz\"/></svg></span> Take the Quiz:</strong></mark> Test your knowledge with our interactive \u201cBeautiful Soup: Build a Web Scraper With Python\u201d quiz. You\u2019ll receive a score upon completion to help you track your learning progress:</p>\n\n  <hr>\n\n  <div class=\"row my-3\">\n    <div class=\"col-xs-12 col-sm-4 col-md-3 align-self-center\">\n\n      <a href=\"/quizzes/beautiful-soup-web-scraper-python/\" tabindex=\"-1\">\n        <div class=\"embed-responsive embed-responsive-16by9\">\n\n            <img class=\"card-img-top m-0 p-0 embed-responsive-item rounded\" style=\"object-fit: contain; background: #ffc873;\" alt=\"Beautiful Soup: Build a Web Scraper With Python\" src=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\" width=\"1920\" height=\"1080\" srcset=\"/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 1920w\" sizes=\"(min-width: 1200px) 142px, (min-width: 1000px) 122px, (min-width: 780px) 112px, (min-width: 580px) 139px, calc(100vw - 62px)\">\n\n\n          <div class=\"card-img-overlay d-flex align-items-center\">\n            <div class=\"mx-auto\">\n              <span class=\"text-light\" style=\"opacity: 0.90;\"><span class=\"icon baseline scale2x\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@quiz\"/></svg></span></span>\n            </div>\n          </div>\n        </div>\n      </a>\n\n    </div>\n    <div class=\"col\">\n      <div class=\"mt-3 d-md-none\"></div> \n      <p class=\"small text-muted mb-0\"><strong>Interactive Quiz</strong></p>\n      <a href=\"/quizzes/beautiful-soup-web-scraper-python/\" class=\"stretched-link\"><span class=\"my-0 h4\">Beautiful Soup: Build a Web Scraper With Python</span></a> \n      <p class=\"text-muted mb-0 small\">In this quiz, you&#x27;ll test your understanding of web scraping using Python. By working through this quiz, you&#x27;ll revisit how to inspect the HTML structure of a target site, decipher data encoded in URLs, and use Requests and Beautiful Soup for scraping and parsing data.</p>\n    </div>\n  </div>\n\n</div>\n\n</section>\n\n    \n      \n      <div class=\"d-flex justify-content-center flex-wrap gap-2 my-3\">\n        \n\n\n<completion-status\n  class=\"btn-group mb-0\"\n  article-slug=\"beautiful-soup-web-scraper-python\"\n  \n  \n  \n  data-api-article-bookmark-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/bookmark/\"\n  data-api-article-completion-status-url=\"/api/v1/articles/beautiful-soup-web-scraper-python/completion_status/\">\n  <button\n    data-target-complete-button\n    title=\"Click to mark as completed\"\n    class=\"btn btn-secondary border-right\"\n    style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\"\n    disabled>Mark as Completed</button>\n  <button\n    data-target-bookmark-button\n    title=\"Add bookmark\"\n    class=\"btn btn-secondary border-left\"\n    disabled><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--bookmark\"/></svg></span></button>\n</completion-status>\n\n        \n<div class=\"btn-group mb-0\">\n  <a class=\"btn btn-secondary border-right\" style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\" title=\"Liked it\" role=\"button\" aria-label=\"Thumbs up (liked it)\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/liked/?from=article-footer\" target=\"_blank\"><span class=\"icon\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-up\"/></svg></span></a> \n  <a class=\"btn btn-secondary border-left\" role=\"button\" aria-label=\"Thumbs down (disliked it)\" title=\"Disliked it\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/disliked/?from=article-footer\" target=\"_blank\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-down\"/></svg></span></a>\n</div>\n\n        \n\n\n\n\n\n\n\n\n\n<share-button\n  url=\"https://realpython.com/beautiful-soup-web-scraper-python/\"\n  url-title=\"Beautiful Soup: Build a Web Scraper With Python\"\n  twitter-text=\"Interesting #Python article by @realpython:\"\n  bluesky-text=\"Interesting #Python article by @realpython.com:\"\n  email-subject=\"Python article for you\"\n  email-body=\"Check out this Python article:%0A%0ABeautiful Soup: Build a Web Scraper With Python\"\n>\n  <button class=\"btn btn-secondary\" type=\"button\" title=\"Share\" aria-label=\"Share\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#@share-light\"/></svg></span>Share</button>\n</share-button>\n\n\n      </div>\n    \n\n    \n      \n<div class=\"border rounded p-3 card mb-2 text-wrap-pretty\">\n  <p class=\"mb-0\"><span class=\"badge badge-pill badge-success\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#v4--play-circle\"/></svg></span> Watch Now</span> This tutorial has a related video course created by the Real Python team. Watch it together with the written tutorial to deepen your understanding: <a class=\"stretched-link text-success\" href=\"/courses/web-scraping-beautiful-soup/\"><strong>Web Scraping With Beautiful Soup and Python</strong></a></p>\n</div>\n\n    \n  </div>\n\n  \n    \n\n<div class=\"card mt-4 mb-4 bg-secondary\">\n  <p class=\"card-header h3 text-center bg-light\">\ud83d\udc0d Python Tricks \ud83d\udc8c</p>\n  <div class=\"card-body\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <div class=\"col-xs-12 col-sm-7\">\n          <p>Get a short &amp; sweet <strong>Python Trick</strong> delivered to your inbox every couple of days. No spam ever. Unsubscribe any time. Curated by the Real Python team.</p>\n        </div>\n        <div class=\"col-xs-12 col-sm-5\">\n          <img loading=\"lazy\" class=\"img-fluid rounded mb-3\" src=\"/static/pytrick-dict-merge.4201a0125a5e.png\" width=\"738\" height=\"490\" alt=\"Python Tricks Dictionary Merge\">\n        </div>\n      </div>\n      <div class=\"row mb-3\">\n        <form class=\"col-12\" action=\"/optins/process/\" method=\"post\">\n          <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"cRHwqkG4XmMvkftxmMwKDAB7fajz1yzceYEEZrvg16eDPAhHZkRiD33ishMREydj\">\n          <input type=\"hidden\" name=\"slug\" value=\"static-python-tricks-footer\">\n          <div class=\"form-group\">\n            <input name=\"email\" type=\"email\" class=\"form-control form-control-lg\" placeholder=\"Email Address\" required>\n          </div>\n          <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-lg btn-block\">Send Me Python Tricks \u00bb</button>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n\n\n  \n\n  \n\n\n\n<div class=\"card mt-3\" id=\"author\">\n  <p class=\"card-header h3\">About <strong>Martin Breuss</strong></p>\n  <div class=\"card-body\">\n    <div class=\"container p-0\">\n      <div class=\"row\">\n        <div class=\"col-12 col-md-3 align-self-center\">\n          <a href=\"/team/mbreuss/\" aria-hidden=\"true\" tabindex=\"-1\">\n            <img loading=\"lazy\" src=\"/cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg\" srcset=\"/cdn-cgi/image/width=114,height=114,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 114w, /cdn-cgi/image/width=152,height=152,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 152w, /cdn-cgi/image/width=228,height=228,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 228w, /cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 456w\" sizes=\"(min-width: 580px) 154px, calc(33.08vw - 24px)\" width=\"456\" height=\"456\" style=\"background: #f1f8fe;\" class=\"d-block d-md-none rounded-circle img-fluid w-33 mb-0 mx-auto\" alt=\"Martin Breuss\">\n            <img loading=\"lazy\" src=\"/cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg\" srcset=\"/cdn-cgi/image/width=114,height=114,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 114w, /cdn-cgi/image/width=152,height=152,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 152w, /cdn-cgi/image/width=228,height=228,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 228w, /cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg 456w\" sizes=\"(min-width: 1200px) 140px, calc(-1.5vw + 137px)\" width=\"456\" height=\"456\" style=\"background: #f1f8fe;\" class=\"d-none d-md-block rounded-circle img-fluid w-100 mb-0\" alt=\"Martin Breuss\">\n          </a>\n        </div>\n        <div class=\"col mt-3\">\n          <p>Martin likes automation, goofy jokes, and snakes, all of which fit into the Python community. He enjoys learning and exploring and is up for talking about it, too. He writes and records content for Real Python and CodingNomads.</p>\n          <a href=\"/team/mbreuss/\" class=\"card-link\">\u00bb More about Martin</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <hr class=\"my-0\">\n  <div class=\"card-body pb-0\">\n    <div class=\"container\">\n      <div class=\"row\">\n        <p><em>Each tutorial at Real Python is created by a team of developers so that it meets our high quality standards. The team members who worked on this tutorial are:</em></p>\n      </div>\n\n      \n        \n          <div class=\"row align-items-center w-100 mx-auto\">\n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/asantos/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=959,height=959,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg\" srcset=\"/cdn-cgi/image/width=239,height=239,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg 239w, /cdn-cgi/image/width=319,height=319,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg 319w, /cdn-cgi/image/width=479,height=479,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg 479w, /cdn-cgi/image/width=959,height=959,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg 959w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"959\" height=\"959\" style=\"background: #dadad8;\" class=\"rounded-circle img-fluid w-100\" alt=\"Aldren Santos\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/asantos/\" class=\"card-link small\" data-previewable><p>Aldren</p></a>\n        </div>\n\n        \n\n        \n      \n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/bweleschuk/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=320,height=320,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg\" srcset=\"/cdn-cgi/image/width=80,height=80,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg 80w, /cdn-cgi/image/width=106,height=106,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg 106w, /cdn-cgi/image/width=160,height=160,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg 160w, /cdn-cgi/image/width=320,height=320,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg 320w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"320\" height=\"320\" style=\"background: #d6d4ad;\" class=\"rounded-circle img-fluid w-100\" alt=\"Brenda Weleschuk\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/bweleschuk/\" class=\"card-link small\" data-previewable><p>Brenda</p></a>\n        </div>\n\n        \n\n        \n      \n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/bzaczynski/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=1694,height=1694,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg\" srcset=\"/cdn-cgi/image/width=423,height=423,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg 423w, /cdn-cgi/image/width=564,height=564,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg 564w, /cdn-cgi/image/width=847,height=847,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg 847w, /cdn-cgi/image/width=1694,height=1694,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg 1694w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"1694\" height=\"1694\" style=\"background: #dadada;\" class=\"rounded-circle img-fluid w-100\" alt=\"Bartosz Zaczy\u0144ski\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/bzaczynski/\" class=\"card-link small\" data-previewable><p>Bartosz</p></a>\n        </div>\n\n        \n\n        \n          </div>\n        \n      \n        \n          <div class=\"row align-items-center w-100 mx-auto\">\n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/gahjelle/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg\" srcset=\"/cdn-cgi/image/width=200,height=200,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg 200w, /cdn-cgi/image/width=266,height=266,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg 266w, /cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg 400w, /cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg 800w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"800\" height=\"800\" style=\"background: #080a09;\" class=\"rounded-circle img-fluid w-100\" alt=\"Geir Arne Hjelle\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/gahjelle/\" class=\"card-link small\" data-previewable><p>Geir Arne</p></a>\n        </div>\n\n        \n\n        \n      \n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/jayazhane/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=572,height=572,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg\" srcset=\"/cdn-cgi/image/width=143,height=143,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg 143w, /cdn-cgi/image/width=190,height=190,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg 190w, /cdn-cgi/image/width=286,height=286,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg 286w, /cdn-cgi/image/width=572,height=572,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg 572w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"572\" height=\"572\" style=\"background: #010010;\" class=\"rounded-circle img-fluid w-100\" alt=\"Jaya Zhan\u00e9\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/jayazhane/\" class=\"card-link small\" data-previewable><p>Jaya</p></a>\n        </div>\n\n        \n\n        \n      \n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/jjablonski/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg\" srcset=\"/cdn-cgi/image/width=200,height=200,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg 200w, /cdn-cgi/image/width=266,height=266,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg 266w, /cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg 400w, /cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg 800w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"800\" height=\"800\" style=\"background: #b8b9bb;\" class=\"rounded-circle img-fluid w-100\" alt=\"Joanna Jablonski\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/jjablonski/\" class=\"card-link small\" data-previewable><p>Joanna</p></a>\n        </div>\n\n        \n\n        \n          </div>\n        \n      \n        \n          <div class=\"row align-items-center w-100 mx-auto\">\n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/jschmitt/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg\" srcset=\"/cdn-cgi/image/width=100,height=100,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg 100w, /cdn-cgi/image/width=133,height=133,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg 133w, /cdn-cgi/image/width=200,height=200,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg 200w, /cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg 400w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"400\" height=\"400\" style=\"background: #c0c0c0;\" class=\"rounded-circle img-fluid w-100\" alt=\"Jacob Schmitt\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/jschmitt/\" class=\"card-link small\" data-previewable><p>Jacob</p></a>\n        </div>\n\n        \n\n        \n      \n        \n\n        <div class=\"col-4 col-sm-2 align-self-center\">\n          \n            <a href=\"/team/mdriscoll/\" aria-hidden=\"true\" tabindex=\"-1\" data-previewable><img loading=\"lazy\" src=\"/cdn-cgi/image/width=900,height=900,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg\" srcset=\"/cdn-cgi/image/width=225,height=225,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg 225w, /cdn-cgi/image/width=300,height=300,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg 300w, /cdn-cgi/image/width=450,height=450,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg 450w, /cdn-cgi/image/width=900,height=900,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg 900w\" sizes=\"(min-width: 1200px) 73px, (min-width: 780px) calc(-0.75vw + 69px), (min-width: 580px) 43px, calc(33.46vw - 64px)\" width=\"900\" height=\"900\" style=\"background: #18110b;\" class=\"rounded-circle img-fluid w-100\" alt=\"Mike Driscoll\"></a>\n          \n        </div>\n        <div class=\"col pl-0 d-none d-sm-block\">\n          <a href=\"/team/mdriscoll/\" class=\"card-link small\" data-previewable><p>Mike</p></a>\n        </div>\n\n        \n          \n          \n            <div class=\"col-4 col-sm-2 align-self-center\"></div>\n            <div class=\"col pl-0 d-none d-sm-block\"></div>\n          \n        \n\n        \n          </div>\n        \n      \n    </div>\n  </div>\n  \n\n</div>\n\n\n\n\n\n  \n    \n\n<div class=\"bg-light rounded py-4 my-4 shadow shadow-sm mx-n2\">\n  \n  <div class=\"col-12 text-center d-block d-md-none\">\n    <p class=\"h2 mb-3\">Master <u><span class=\"marker-highlight\">Real-World Python Skills</mark></u> With Unlimited Access to Real&nbsp;Python</p>\n    <p class=\"mb-1\"><img loading=\"lazy\" class=\"w-75\" src=\"/static/videos/lesson-locked.f5105cfd26db.svg\" width=\"510\" height=\"260\" alt=\"Locked learning resources\"></p>\n    <p class=\"mx-auto w-75 mb-3 small\"><strong>Join us and get access to thousands of tutorials, hands-on video courses, and a community of expert&nbsp;Pythonistas:</strong></p>\n    <p class=\"mb-0\"><a href=\"/account/join/?utm_source=rp_article_footer&utm_content=beautiful-soup-web-scraper-python\" class=\"btn btn-primary btn-sm px-4 mb-0\">Level Up Your Python Skills \u00bb</a>\n  </div>\n\n  \n  <div class=\"col-12 text-center d-none d-md-block\">\n    <p class=\"h2 mb-2\">Master <u><span class=\"marker-highlight\">Real-World Python Skills</span></u><br>With Unlimited Access to Real&nbsp;Python</p>\n    <p class=\"mb-2\"><img loading=\"lazy\" class=\"w-50 mb-2\" src=\"/static/videos/lesson-locked.f5105cfd26db.svg\" width=\"510\" height=\"260\" alt=\"Locked learning resources\"></p>\n    <p class=\"mx-auto w-50 mb-3\"><strong>Join us and get access to thousands of tutorials, hands-on video courses, and a community of expert Pythonistas:</strong></p>\n    <p><a href=\"/account/join/?utm_source=rp_article_footer&utm_content=beautiful-soup-web-scraper-python\" class=\"btn btn-primary btn-lg px-4\">Level Up Your Python Skills \u00bb</a>\n  </div>\n</div>\n\n  \n\n  \n  <div class=\"card mt-4\" id=\"reader-comments\">\n    <p class=\"card-header h3\">What Do You Think?</p>\n    \n    <div class=\"text-center mt-3 mb-0 p-0\">\n      <div class=\"mb-2\">\n        <strong class=\"mr-2\">Rate this article:</strong>\n        \n<div class=\"btn-group mb-0\">\n  <a class=\"btn btn-secondary border-right\" style=\"border-top-right-radius: 0; border-bottom-right-radius: 0;\" title=\"Liked it\" role=\"button\" aria-label=\"Thumbs up (liked it)\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/liked/?from=article-comments\" target=\"_blank\"><span class=\"icon\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-up\"/></svg></span></a> \n  <a class=\"btn btn-secondary border-left\" role=\"button\" aria-label=\"Thumbs down (disliked it)\" title=\"Disliked it\" href=\"/feedback/survey/article/beautiful-soup-web-scraper-python/disliked/?from=article-comments\" target=\"_blank\"><span class=\"icon baseline\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#light--thumbs-down\"/></svg></span></a>\n</div>\n\n      </div>\n      \n\n\n\n<div class=\"d-flex justify-content-center flex-wrap gap-2 my-3\">\n  \n  \n  <a target=\"_blank\" rel=\"nofollow\" href=\"https://www.linkedin.com/sharing/share-offsite/?url=https%3A%2F%2Frealpython.com%2Fbeautiful-soup-web-scraper-python%2F\" class=\"btn btn-sm share-linkedin\" aria-label=\"Share on LinkedIn\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#brands--linkedin\"/></svg></span>LinkedIn</a>\n  \n  \n  <a target=\"_blank\" rel=\"nofollow\" href=\"https://twitter.com/intent/tweet/?text=Interesting%20Python%20article%20on%20%40realpython%3A%20Beautiful%20Soup%3A%20Build%20a%20Web%20Scraper%20With%20Python&url=https%3A%2F%2Frealpython.com%2Fbeautiful-soup-web-scraper-python%2F\" class=\"btn btn-sm share-x-twitter\" aria-label=\"Share on X/Twitter\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#brands--x-twitter\"/></svg></span>Twitter</a>\n  \n  \n  <a target=\"_blank\" rel=\"nofollow\" href=\"https://bsky.app/intent/compose?text=Interesting%20Python%20article%20on%20%40realpython.com%3A%20Beautiful%20Soup%3A%20Build%20a%20Web%20Scraper%20With%20Python%20https%3A%2F%2Frealpython.com%2Fbeautiful-soup-web-scraper-python%2F\" class=\"btn btn-sm share-bluesky\" aria-label=\"Share on Bluesky\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#brands--bluesky\"/></svg></span>Bluesky</a>\n  \n  \n  <a target=\"_blank\" rel=\"nofollow\" href=\"https://facebook.com/sharer/sharer.php?u=https%3A%2F%2Frealpython.com%2Fbeautiful-soup-web-scraper-python%2F\" class=\"btn btn-sm share-facebook\" aria-label=\"Share on Facebook\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#brands--facebook\"/></svg></span>Facebook</a>\n  \n  \n  <a target=\"_blank\" rel=\"nofollow\" href=\"mailto:?subject=Python%20article%20for%20you&body=Beautiful%20Soup%3A%20Build%20a%20Web%20Scraper%20With%20Python%20on%20Real%20Python%0A%0Ahttps%3A%2F%2Frealpython.com%2Fbeautiful-soup-web-scraper-python%2F%0A\" class=\"btn btn-sm share-email\" aria-label=\"Share via Email\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--envelope\"/></svg></span>Email</a>\n  \n  \n</div>\n\n    </div>\n    \n    <div class=\"card-body pt-0 text-wrap-pretty\">\n      <p>What\u2019s your #1 takeaway or favorite thing you learned? How are you going to put your newfound skills to use? Leave a comment below and let us know.</p>\n\n      <div class=\"alert alert-dark\">\n        <p class=\"mb-0\"><strong>Commenting Tips:</strong> The most useful comments are those written with the goal of learning from or helping out other students. <a href=\"https://realpython.com/python-beginner-tips/#tip-9-ask-good-questions\" target=\"_blank\">Get tips for asking good questions</a> and <a href=\"https://support.realpython.com\" target=\"_blank\">get answers to common questions in our support portal</a>.<hr>Looking for a real-time conversation? Visit the <a href=\"/community/\" target=\"_blank\">Real Python Community Chat</a> or join the next <a href=\"/office-hours/\" target=\"_blank\">&ldquo;Office&nbsp;Hours&rdquo; Live Q&A Session</a>. Happy Pythoning!</p>\n\n      </div>\n\n      <div class=\"mb-4\" id=\"disqus_thread\">\n      \n      </div>\n      \n    </div>\n  </div>\n\n  <div class=\"card mt-4 mb-4\">\n    <p class=\"card-header h3\">Keep Learning</p>\n    <div class=\"card-body\">\n\n      <p class=\"mb-0\">Related Topics:\n      \n        \n<a href=\"/tutorials/intermediate/\" class=\"badge badge-light text-muted\" data-previewable>intermediate</a>\n\n      \n        \n<a href=\"/tutorials/data-science/\" class=\"badge badge-light text-muted\" data-previewable>data-science</a>\n\n      \n        \n<a href=\"/tutorials/tools/\" class=\"badge badge-light text-muted\" data-previewable>tools</a>\n\n      \n        \n<a href=\"/tutorials/web-scraping/\" class=\"badge badge-light text-muted\" data-previewable>web-scraping</a>\n\n      \n      </p>\n\n      \n        <p class=\"mt-3 mb-0\">Recommended Video Course: <a class=\"text-success\" href=\"/courses/web-scraping-beautiful-soup/\" data-previewable>Web Scraping With Beautiful Soup and Python</a></p>\n      \n\n      \n        <p class=\"mt-3 mb-0\">Related Tutorials:</p>\n        <ul class=\"mb-0\">\n          \n            <li>\n              <a href=\"/python-web-scraping-practical-introduction/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=beautiful-soup-web-scraper-python\" data-previewable>A Practical Introduction to Web Scraping in Python</a>\n            </li>\n          \n            <li>\n              <a href=\"/web-scraping-with-scrapy-and-mongodb/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=beautiful-soup-web-scraper-python\" data-previewable>Web Scraping With Scrapy and MongoDB</a>\n            </li>\n          \n            <li>\n              <a href=\"/modern-web-automation-with-python-and-selenium/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=beautiful-soup-web-scraper-python\" data-previewable>Modern Web Automation With Python and Selenium</a>\n            </li>\n          \n            <li>\n              <a href=\"/python-virtual-environments-a-primer/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=beautiful-soup-web-scraper-python\" data-previewable>Python Virtual Environments: A Primer</a>\n            </li>\n          \n            <li>\n              <a href=\"/what-can-i-do-with-python/?utm_source=realpython&amp;utm_medium=web&amp;utm_campaign=related-post&amp;utm_content=beautiful-soup-web-scraper-python\" data-previewable>What Can I Do With Python?</a>\n            </li>\n          \n        </ul>\n      \n\n    </div>\n  </div>\n\n  \n    \n\n<div class=\"modal fade\" tabindex=\"-1\" role=\"dialog\" id=\"rprw\">\n  <div class=\"modal-dialog modal-lg modal-dialog-centered\" role=\"document\">\n    <div class=\"modal-content\">\n\n      <div class=\"modal-header border-0\">\n        <div class=\"col-12 col-lg-9 mx-auto modal-title text-center my-2\">\n          <h2 class=\"my-0\">Keep reading Real&nbsp;Python by creating a free account or signing&nbsp;in:</h2>\n        </div>\n      </div>\n\n      \n      <div class=\"modal-body bg-light\">\n        <div class=\"col-12 text-center\">\n\n          <div class=\"col-12 col-lg-8 mx-auto mb-2 mt-3\">\n            <a href=\"/account/signup/?intent=continue_reading&utm_source=rp&utm_medium=web&utm_campaign=rwn&utm_content=v1&next=%2Fbeautiful-soup-web-scraper-python%2F\"><img loading=\"lazy\" class=\"w-100\" src=\"/static/videos/lesson-locked.f5105cfd26db.svg\"  width=\"510\" height=\"260\" alt=\"Keep reading\"></a>\n          </div>\n\n          <p><a href=\"/account/signup/?intent=continue_reading&utm_source=rp&utm_medium=web&utm_campaign=rwn&utm_content=v1&next=%2Fbeautiful-soup-web-scraper-python%2F\" class=\"btn btn-primary btn-lg px-5\"></i>Continue \u00bb</a></p>\n\n        </div>\n      </div>\n      \n\n      <div class=\"modal-footer border-0\">\n        <p class=\"text-center text-muted mt-2 mb-1\">Already have an account? <a href=\"/account/login/?next=/beautiful-soup-web-scraper-python/\">Sign-In</a></p>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n    <script src=\"/static/frontend/reader/rw.ecf2beb34be7.js\" async></script>\n  \n\n\n    </div>\n\n  </div>\n\n    </div>\n\n    \n    \n\n    \n    \n      \n        \n          <div class=\"modal fade\" id=\"modal-beautiful-soup-web-scraper-python-code\" tabindex=\"-1\" aria-labelledby=\"modal-beautiful-soup-web-scraper-python-code-title\" aria-describedby=\"modal-beautiful-soup-web-scraper-python-code-desc\">\n  <div class=\"modal-dialog modal-dialog-centered modal-lg\">\n    <div class=\"modal-content\">\n\n      <div class=\"modal-header bg-light pt-3 pb-2\">\n        <div class=\"container-fluid\">\n          <div class=\"row\">\n            <div class=\"col-12\">\n              <div class=\"progress\" style=\"height: .5rem;\" aria-hidden=\"true\">\n                <div class=\"progress-bar progress\r\n48e3\r\n-bar-striped progress-bar-animated w-75\" role=\"progressbar\"></div>\n              </div>\n            </div>\n            <div class=\"col-12\">\n              <p id=\"modal-beautiful-soup-web-scraper-python-code-desc\" class=\"text-muted text-center mb-0 mt-2\">Almost there! Complete this form and click the button below to gain instant&nbsp;access:</p>\n            </div>\n          </div>\n        </div>\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n\n      <div class=\"modal-body m-4\">\n        <div class=\"container-fluid\">\n          <div class=\"row align-items-center text-center\">\n            <div class=\"col-12 col-lg-4 mb-4 mb-lg-0\">\n              \n              \n                <img loading=\"lazy\" class=\"img-fluid rounded\" src=\"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\" width=\"1920\" height=\"1080\" srcset=\"/cdn-cgi/image/width=480,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 480w, /cdn-cgi/image/width=640,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 640w, /cdn-cgi/image/width=960,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 960w, /cdn-cgi/image/width=1920,format=auto/https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg 1920w\" sizes=\"(min-width: 1000px) 207px, (min-width: 580px) 382px, calc(100vw - 134px)\" alt=\"Beautiful Soup: Build a Web Scraper With Python\">\n              \n            </div>\n            <div class=\"col\">\n              <p id=\"modal-beautiful-soup-web-scraper-python-code-title\" class=\"text-center h3 mb-4\">Beautiful Soup: Build a Web Scraper With Python (Sample Code)</p>\n\n              <form class=\"col-12\" action=\"/optins/process/\" method=\"post\">\n                <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value=\"cRHwqkG4XmMvkftxmMwKDAB7fajz1yzceYEEZrvg16eDPAhHZkRiD33ishMREydj\">\n                <input type=\"hidden\" name=\"slug\" value=\"beautiful-soup-web-scraper-python-code\">\n                <input type=\"hidden\" name=\"source_path\" value=\"/beautiful-soup-web-scraper-python/\"> \n                <div class=\"form-group\">\n                  <input type=\"email\" name=\"email\" class=\"form-control\" placeholder=\"Email Address\" required autofocus>\n                </div>\n                <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-block text-wrap\">Send Code \u00bb</button>\n                <p class=\"mb-0 mt-2 text-muted text-center\"><small>\ud83d\udd12 No spam. We take your privacy seriously.</small></p>\n              </form>\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</div>\n\n        \n      \n    \n\n    \n      \n<footer class=\"footer\">\n  <div class=\"container\">\n    \n      <div class=\"mx-auto mt-4 mb-0\" style=\"max-width: 768px;\">\n        \n\n<div style=\"display:block;position:relative;\">\n  <div style=\"display:block;width:100%;padding-top:12.5%;\"></div>\n  <div class=\"rpad rounded border\" data-unit=\"8x1\" style=\"position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;\"></div>\n</div>\n<a class=\"small text-muted\" href=\"/account/join/\" rel=\"nofollow\"><span class=\"icon baseline mr-1\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--circle-info\"/></svg></span>Remove ads</a>\n\n\n      </div>\n    \n\n    <p class=\"text-center text-muted w-75 mx-auto\">\u00a9 2012\u20132025 Real&nbsp;Python&nbsp;\u22c5 <a href=\"/newsletter/\">Newsletter</a>&nbsp;\u22c5 <a href=\"/podcasts/rpp/\">Podcast</a>&nbsp;\u22c5 <a href=\"https://www.youtube.com/realpython\">YouTube</a>&nbsp;\u22c5 <a href=\"https://twitter.com/realpython\">Twitter</a>&nbsp;\u22c5 <a href=\"https://facebook.com/LearnRealPython\">Facebook</a>&nbsp;\u22c5 <a href=\"https://www.instagram.com/realpython/\">Instagram</a>&nbsp;\u22c5 <a href=\"/\">Python&nbsp;Tutorials</a>&nbsp;\u22c5 <a href=\"/search\">Search</a>&nbsp;\u22c5 <a href=\"/privacy-policy/\">Privacy Policy</a>&nbsp;\u22c5 <a href=\"/energy-policy/\">Energy Policy</a>&nbsp;\u22c5 <a href=\"/sponsorships/\">Advertise</a>&nbsp;\u22c5 <a href=\"/contact/\">Contact</a><br><span class=\"icon baseline text-color-red\" aria-hidden=\"true\"><svg aria-hidden=\"true\"><use href=\"/static/icons.6eec2e95bede.svg#solid--heart\"/></svg></span> Happy Pythoning!</p>\n  </div>\n</footer>\n\n    \n\n    \n\n    \n    <script>\n      (function() {\n        var isAndroid = navigator.userAgent.toLowerCase().indexOf(\"android\") > -1;\n        if (!isAndroid) {\n          return;\n        }\n\n        var styles = `\n        @font-face {\n          font-family: 'DejaVu Sans Mono';\n          font-weight: normal;\n          font-style: normal;\n          font-display: swap;\n          src: url('/static/mfonts/dejavu-sans-mono.33f00225f915.woff2') format('woff2'),\n               url('/static/mfonts/dejavu-sans-mono.0da77d3739f3.woff') format('woff'),\n               url('/static/mfonts/dejavu-sans-mono.c2356fc49835.ttf') format('truetype');\n        }\n        code, kbd, pre, samp {\n          font-family: 'DejaVu Sans Mono', monospace;\n        }\n        `\n\n        var styleSheet = document.createElement(\"style\")\n        styleSheet.type = \"text/css\"\n        styleSheet.innerText = styles\n        document.head.appendChild(styleSheet)\n      })();\n    </script>\n\n    \n    \n    <script src=\"/static/jquery.min.2c872dbe60f4.js\"></script>\n    <script src=\"/static/popper.min.aeebb49d0b64.js\"></script>\n    <script src=\"/static/bootstrap.min.248284cdd069.js\"></script>\n\n    \n    \n\n\n    <script>\n    (function() {\n      document.querySelectorAll(\".js-search-form-submit\").forEach(function(el) {\n        el.addEventListener(\"click\", function(e) {\n          e.preventDefault();\n          e.currentTarget.parentElement.submit();\n        })\n      });\n    })();\n    </script>\n    <script src=\"/static/frontend/reader/codeblock.6d3601ac3900.js\" async></script>\n    <script src=\"/static/frontend/reader/lightbox.e2bf4493247c.js\" async></script>\n    <script src=\"/static/frontend/reader/platforms-ui.37cd3614622e.js\" async></script>\n    \n\n    \n    <script src=\"/static/frontend/previews/popover.0840a129f546.js\" async></script>\n    \n\n    <script src=\"/static/frontend/blog/components/table-of-contents.83dc31f35bc0.js\" defer></script>\n<script src=\"/static/frontend/blog/components/completion-status.3458930eb54e.js\" defer></script>\n<script src=\"/static/frontend/components/share-button.a4241c948aaf.js\" defer></script>\n\n\n\n    \n\n    \n    \n\n    \n\n    \n    \n\n    \n    \n\n<script>window.rp_prop_id = '58946116052';</script>\n<script src=\"https://srv.realpython.net/tag.js\" async></script>\n\n\n\n<script id=\"js-context\" type=\"application/json\">{\"is_completed\": false, \"is_bookmarked\": false, \"api_article_bookmark_url\": \"/api/v1/articles/beautiful-soup-web-scraper-python/bookmark/\", \"api_article_completion_status_url\": \"/api/v1/articles/beautiful-soup-web-scraper-python/completion_status/\"}</script>\n\n\n\n\n\n\n  \n    <script id=\"dsq-count-scr\" src=\"https://realpython.disqus.com/count.js\" async></script>\n    <script>\n      var disqus_config = function () {\n        this.page.url = 'https://realpython.com/beautiful-soup-web-scraper-python/';\n        this.page.identifier = 'https://realpython.com/beautiful-soup-web-scraper-python/';\n        this.callbacks.onReady = [function() {\n          if (window.onDisqusReady) {\n            window.onDisqusReady();\n          }\n        }];\n      };\n      var disqus_script_url = 'https://realpython.disqus.com/embed.js';\n    </script>\n    <script src=\"/static/frontend/reader/lazy-disqus.9e724d0e9f88.js\" defer></script>\n  \n\n\n  \n  \n  <script src=\"https://cdn.onesignal.com/sdks/web/v16/OneSignalSDK.page.js\" defer></script>\n  <script>\n    window.OneSignalDeferred = window.OneSignalDeferred || [];\n    OneSignalDeferred.push(function(OneSignal) {\n      OneSignal.init({\n        appId: \"c0081e20-a523-42bb-b0ac-04c5a9e8bf40\",\n        safari_web_id: \"web.onesignal.auto.337e82fd-eeda-48f8-8fe5-d2f6dec774c2\",\n        notifyButton: {\n          enable: true,\n          position: \"bottom-left\",\n          showCredit: false,\n          text: {\n            \"tip.state.unsubscribed\": \"Receive a notification when we post a new tutorial\",\n            \"tip.state.subscribed\": \"You're subscribed to new tutorial notifications\",\n            'tip.state.blocked': \"You've blocked notifications\",\n            'message.prenotify': 'Click to subscribe to notifications',\n            \"message.action.subscribed\": \"Great, we'll let you know when the next tutorial comes out!\",\n            'message.action.resubscribed': \"You're subscribed to notifications\",\n            'message.action.unsubscribed': \"You won't receive notifications again\",\n            'dialog.main.title': 'Manage Site Notifications',\n            'dialog.main.button.subscribe': 'SUBSCRIBE',\n            'dialog.main.button.unsubscribe': 'UNSUBSCRIBE',\n            'dialog.blocked.title': 'Unblock Notifications',\n            'dialog.blocked.message': \"Follow these instructions to allow notifications:\"\n          },\n          \n        },\n      });\n    });\n  </script>\n  \n\n  \n    <script type=\"application/ld+json\">{\n  \"@context\": \"http://schema.org\",\n  \"@type\": \"Article\",\n  \"headline\": \"Beautiful Soup: Build a Web Scraper With Python\",\n  \"image\": {\n    \"@type\": \"ImageObject\",\n    \"url\": \"https://files.realpython.com/media/Build-a-Web-Scraper-With-Requests-and-Beautiful-Soup_Watermarked.37918fb3906c.jpg\",\n    \"width\": 1920,\n    \"height\": 1080\n  },\n  \"mainEntityOfPage\": {\n    \"@type\": \"WebPage\",\n    \"@id\": \"https://realpython.com/beautiful-soup-web-scraper-python/\",\n    \"lastReviewed\": \"2024-12-02\",\n    \"author\": {\n      \"@type\": \"Person\",\n      \"name\": \"Martin Breuss\",\n      \"image\": \"https://realpython.com/cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg\",\n      \"url\": \"https://realpython.com/team/mbreuss/\",\n      \"affiliation\": {\n        \"@type\": \"Organization\",\n        \"name\": \"Real Python\",\n        \"url\": \"https://realpython.com\",\n        \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n      }\n    },\n    \"reviewedBy\": [\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Aldren Santos\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=959,height=959,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/PP.9b8b026f75b8.jpg\",\n        \"url\": \"https://realpython.com/team/asantos/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Brenda Weleschuk\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=320,height=320,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/IMG_3324_1.50b309355fc1.jpg\",\n        \"url\": \"https://realpython.com/team/bweleschuk/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Bartosz Zaczy\\u0144ski\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=1694,height=1694,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/coders_lab_2109368.259b1599fbee.jpg\",\n        \"url\": \"https://realpython.com/team/bzaczynski/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Geir Arne Hjelle\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/gahjelle.470149ee709e.jpg\",\n        \"url\": \"https://realpython.com/team/gahjelle/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Jaya Zhan\\u00e9\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=572,height=572,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/author-jpowell.ecce5da51b65.jpg\",\n        \"url\": \"https://realpython.com/team/jayazhane/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Joanna Jablonski\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=800,height=800,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/jjablonksi-avatar.e37c4f83308e.jpg\",\n        \"url\": \"https://realpython.com/team/jjablonski/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Jacob Schmitt\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=400,height=400,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/profile-small_js.2f4d0d8da1ca.jpg\",\n        \"url\": \"https://realpython.com/team/jschmitt/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      },\n      {\n        \"@type\": \"Person\",\n        \"name\": \"Mike Driscoll\",\n        \"image\": \"https://realpython.com/cdn-cgi/image/width=900,height=900,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/mdriscoll.db44df0df864.jpg\",\n        \"url\": \"https://realpython.com/team/mdriscoll/\",\n        \"affiliation\": {\n          \"@type\": \"Organization\",\n          \"name\": \"Real Python\",\n          \"url\": \"https://realpython.com\",\n          \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n        }\n      }\n    ]\n  },\n  \"datePublished\": \"2024-12-01T14:00:00+00:00\",\n  \"dateModified\": \"2024-12-02T08:19:24.072562+00:00\",\n  \"publisher\": {\n    \"@type\": \"Organization\",\n    \"name\": \"Real Python\",\n    \"url\": \"https://realpython.com\",\n    \"logo\": {\n      \"@type\": \"ImageObject\",\n      \"url\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\",\n      \"width\": 512,\n      \"height\": 512\n    },\n    \"description\": \"Real Python is a leading provider of online Python education and one of the largest language-specific online communities for software developers. It publishes high-quality learning resources, such as tutorials, books, and courses to an audience of millions of developers, data scientists, and machine learning engineers each month.\",\n    \"slogan\": \"Become a Python Expert\",\n    \"email\": \"info@realpython.com\",\n    \"sameAs\": [\n      \"https://www.youtube.com/realpython\",\n      \"https://twitter.com/realpython\",\n      \"https://x.com/realpython\",\n      \"https://www.linkedin.com/company/realpython-com/\",\n      \"https://www.facebook.com/learnrealpython\",\n      \"https://www.instagram.com/realpython\",\n      \"https://www.tiktok.com/@realpython.com\"\n    ]\n  },\n  \"author\": {\n    \"@type\": \"Person\",\n    \"name\": \"Martin Breuss\",\n    \"image\": \"https://realpython.com/cdn-cgi/image/width=456,height=456,fit=crop,gravity=auto,format=auto/https://files.realpython.com/media/martin_breuss_python_square.efb2b07faf9f.jpg\",\n    \"url\": \"https://realpython.com/team/mbreuss/\",\n    \"affiliation\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Real Python\",\n      \"url\": \"https://realpython.com\",\n      \"logo\": \"https://realpython.com/static/real-python-logo-square-512.157ae6bf64ed.png\"\n    }\n  },\n  \"description\": \"In this tutorial, you'll walk through the main steps of the web scraping process. You'll learn how to write a script that uses Python's Requests library to scrape data from a website. You'll also use Beautiful Soup to extract the specific pieces of information you're interested in.\"\n}</script>\n  \n\n\n    <script src=\"/static/frontend/optins/optins.f699b7d79cab.js\" async></script>\n    <script src=\"/static/frontend/search/autocomplete.83a947915498.js\" async></script>\n\n    \n\n    \n\n    \n\n    \n\n    \n<script>\n  !function(f,b,e,v,n,t,s)\n  {if(f.fbq)return;n=f.fbq=function(){n.callMethod?\n  n.callMethod.apply(n,arguments):n.queue.push(arguments)};\n  if(!f._fbq)f._fbq=n;n.push=n;n.loaded=!0;n.version='2.0';\n  n.queue=[];t=b.createElement(e);t.async=!0;\n  t.src=v;s=b.getElementsByTagName(e)[0];\n  s.parentNode.insertBefore(t,s)}(window, document,'script',\n  'https://connect.facebook.net/en_US/fbevents.js');\n  fbq('init', '2220911568135371');\n  fbq('track', 'PageView');\n</script>\n<noscript><img height=\"1\" width=\"1\" style=\"display:none\"\n  src=\"https://www.facebook.com/tr?id=2220911568135371&ev=PageView&noscript=1\"\n/></noscript>\n\n\n    \n\n    \n\n  <script>(function(){function c(){var b=a.contentDocument||a.contentWindow.document;if(b){var d=b.createElement('script');d.innerHTML=\"window.__CF$cv$params={r:'92929a3deb141864',t:'MTc0MzQ1MzAwNS4wMDAwMDA='};var a=document.createElement('script');a.nonce='';a.src='/cdn-cgi/challenge-platform/scripts/jsd/main.js';document.getElementsByTagName('head')[0].appendChild(a);\";b.getElementsByTagName('head')[0].appendChild(d)}}if(document.body){var a=document.createElement('iframe');a.height=1;a.width=1;a.style.position='absolute';a.style.top=0;a.style.left=0;a.style.border='none';a.style.visibility='hidden';document.body.appendChild(a);if('loading'!==document.readyState)c();else if(window.addEventListener)document.addEventListener('DOMContentLoaded',c);else{var e=document.onreadystatechange||function(){};document.onreadystatechange=function(b){e(b);'loading'!==document.readyState&&(document.onreadystatechange=e,c())}}}})();</script></body>\n</html>\n\r\n0\r\n\r\n", "headers": {"Date": "Mon, 31 Mar 2025 20:30:05 GMT", "Content-Type": "text/html; charset=utf-8", "Transfer-Encoding": "chunked", "Connection": "close", "Report-To": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1743453004&sid=67ff5de4-ad2b-4112-9289-cf96be89efed&s=l7Hq2pC5qDrhl5vjMdZ1NbZmpUAev06ae2TC2lE1c0o%3D\"}]}", "Reporting-Endpoints": "heroku-nel=https://nel.heroku.com/reports?ts=1743453004&sid=67ff5de4-ad2b-4112-9289-cf96be89efed&s=l7Hq2pC5qDrhl5vjMdZ1NbZmpUAev06ae2TC2lE1c0o%3D", "Nel": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}", "X-Frame-Options": "SAMEORIGIN", "Vary": "Cookie, Accept-Encoding", "Strict-Transport-Security": "max-age=31536000; includeSubDomains; preload", "X-Content-Type-Options": "nosniff", "Referrer-Policy": "strict-origin-when-cross-origin,origin", "Cross-Origin-Opener-Policy": "same-origin", "Set-Cookie": "csrftoken=ch7iJhZmeUCiFvYkNIvIaDClnhDsNaOh; expires=Mon, 30 Mar 2026 20:30:05 GMT; Max-Age=31449600; Path=/; SameSite=Lax; Secure", "Via": "1.1 vegur", "cf-cache-status": "DYNAMIC", "Server": "cloudflare", "CF-RAY": "92929a3deb141864-KIV", "alt-svc": "h3=\":443\"; ma=86400"}}